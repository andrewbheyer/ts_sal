# Makefile.in generated by automake 1.9.5 from Makefile.am.
# orte/liborte/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  Makefile for the Ocera Real-Time Ethernet
#
#  $Id: Makefile.am,v 1.0 2003/08/04
#



SOURCES = $(liborte_la_SOURCES) $(orte_rt_ko_SOURCES)

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/orte
pkglibdir = $(libdir)/orte
pkgincludedir = $(includedir)/orte
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i386-pc-rtems
target_triplet = i386-pc-rtems
#module_PROGRAMS = orte_rt.ko$(EXEEXT)
subdir = orte/liborte
DIST_COMMON = $(liborte1_HEADERS) $(liborte2_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/admin/idl.m4 \
	$(top_srcdir)/admin/jorte.m4 $(top_srcdir)/admin/linux.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/orte/include/orte/orte_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(moduledir)" \
	"$(DESTDIR)$(liborte1dir)" "$(DESTDIR)$(liborte2dir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
liborte_la_LIBADD =
am__liborte_la_SOURCES_DIST = cdr.c conv.c debug.c event.c fnmatch.c \
	htimerNtp.c objectEntry.c objectEntryTimer.c objectUtils.c \
	ORTEAppRecvThread.c ORTEAppSendThread.c ORTEDomainApp.c \
	ORTEPublication.c ORTEPublicationTimer.c ORTESubscription.c \
	ORTEDomain.c ORTEDomainMgr.c ORTEInit.c ORTEThreadUtils.c \
	ORTETypeRegister.c ORTEVerbosity.c ORTEPattern.c ORTEMisc.c \
	parameter.c RTPSAck.c RTPSCSTReader.c RTPSCSTReaderTimer.c \
	RTPSCSTReaderProc.c RTPSCSTWriter.c RTPSCSTWriterTimer.c \
	RTPSGap.c RTPSHeader.c RTPSHeardBeat.c RTPSInfoDST.c \
	RTPSInfoREPLY.c RTPSInfoSRC.c RTPSInfoTS.c RTPSPad.c \
	RTPSUtils.c RTPSVar.c RTPSIssue.c sock.c ul_gavl.c \
	ul_gavlprim.c
am__objects_1 = liborte_la-cdr.lo liborte_la-conv.lo \
	liborte_la-debug.lo liborte_la-event.lo liborte_la-fnmatch.lo \
	liborte_la-htimerNtp.lo liborte_la-objectEntry.lo \
	liborte_la-objectEntryTimer.lo liborte_la-objectUtils.lo \
	liborte_la-ORTEAppRecvThread.lo \
	liborte_la-ORTEAppSendThread.lo liborte_la-ORTEDomainApp.lo \
	liborte_la-ORTEPublication.lo \
	liborte_la-ORTEPublicationTimer.lo \
	liborte_la-ORTESubscription.lo liborte_la-ORTEDomain.lo \
	liborte_la-ORTEDomainMgr.lo liborte_la-ORTEInit.lo \
	liborte_la-ORTEThreadUtils.lo liborte_la-ORTETypeRegister.lo \
	liborte_la-ORTEVerbosity.lo liborte_la-ORTEPattern.lo \
	liborte_la-ORTEMisc.lo liborte_la-parameter.lo \
	liborte_la-RTPSAck.lo liborte_la-RTPSCSTReader.lo \
	liborte_la-RTPSCSTReaderTimer.lo \
	liborte_la-RTPSCSTReaderProc.lo liborte_la-RTPSCSTWriter.lo \
	liborte_la-RTPSCSTWriterTimer.lo liborte_la-RTPSGap.lo \
	liborte_la-RTPSHeader.lo liborte_la-RTPSHeardBeat.lo \
	liborte_la-RTPSInfoDST.lo liborte_la-RTPSInfoREPLY.lo \
	liborte_la-RTPSInfoSRC.lo liborte_la-RTPSInfoTS.lo \
	liborte_la-RTPSPad.lo liborte_la-RTPSUtils.lo \
	liborte_la-RTPSVar.lo liborte_la-RTPSIssue.lo \
	liborte_la-sock.lo liborte_la-ul_gavl.lo \
	liborte_la-ul_gavlprim.lo
am_liborte_la_OBJECTS = $(am__objects_1)
liborte_la_OBJECTS = $(am_liborte_la_OBJECTS)
am_liborte_la_rpath = -rpath $(libdir)
PROGRAMS = $(module_PROGRAMS)
am__orte_rt_ko_SOURCES_DIST = cdr.c conv.c debug.c event.c fnmatch.c \
	htimerNtp.c objectEntry.c objectEntryTimer.c objectUtils.c \
	ORTEAppRecvThread.c ORTEAppSendThread.c ORTEDomainApp.c \
	ORTEPublication.c ORTEPublicationTimer.c ORTESubscription.c \
	ORTEDomain.c ORTEDomainMgr.c ORTEInit.c ORTEThreadUtils.c \
	ORTETypeRegister.c ORTEVerbosity.c ORTEPattern.c ORTEMisc.c \
	parameter.c RTPSAck.c RTPSCSTReader.c RTPSCSTReaderTimer.c \
	RTPSCSTReaderProc.c RTPSCSTWriter.c RTPSCSTWriterTimer.c \
	RTPSGap.c RTPSHeader.c RTPSHeardBeat.c RTPSInfoDST.c \
	RTPSInfoREPLY.c RTPSInfoSRC.c RTPSInfoTS.c RTPSPad.c \
	RTPSUtils.c RTPSVar.c RTPSIssue.c sock.c ul_gavl.c \
	ul_gavlprim.c
am__objects_2 = cdr.$(OBJEXT) conv.$(OBJEXT) debug.$(OBJEXT) \
	event.$(OBJEXT) fnmatch.$(OBJEXT) htimerNtp.$(OBJEXT) \
	objectEntry.$(OBJEXT) objectEntryTimer.$(OBJEXT) \
	objectUtils.$(OBJEXT) ORTEAppRecvThread.$(OBJEXT) \
	ORTEAppSendThread.$(OBJEXT) ORTEDomainApp.$(OBJEXT) \
	ORTEPublication.$(OBJEXT) ORTEPublicationTimer.$(OBJEXT) \
	ORTESubscription.$(OBJEXT) ORTEDomain.$(OBJEXT) \
	ORTEDomainMgr.$(OBJEXT) ORTEInit.$(OBJEXT) \
	ORTEThreadUtils.$(OBJEXT) ORTETypeRegister.$(OBJEXT) \
	ORTEVerbosity.$(OBJEXT) ORTEPattern.$(OBJEXT) \
	ORTEMisc.$(OBJEXT) parameter.$(OBJEXT) RTPSAck.$(OBJEXT) \
	RTPSCSTReader.$(OBJEXT) RTPSCSTReaderTimer.$(OBJEXT) \
	RTPSCSTReaderProc.$(OBJEXT) RTPSCSTWriter.$(OBJEXT) \
	RTPSCSTWriterTimer.$(OBJEXT) RTPSGap.$(OBJEXT) \
	RTPSHeader.$(OBJEXT) RTPSHeardBeat.$(OBJEXT) \
	RTPSInfoDST.$(OBJEXT) RTPSInfoREPLY.$(OBJEXT) \
	RTPSInfoSRC.$(OBJEXT) RTPSInfoTS.$(OBJEXT) RTPSPad.$(OBJEXT) \
	RTPSUtils.$(OBJEXT) RTPSVar.$(OBJEXT) RTPSIssue.$(OBJEXT) \
	sock.$(OBJEXT) ul_gavl.$(OBJEXT) ul_gavlprim.$(OBJEXT)
#am_orte_rt_ko_OBJECTS = $(am__objects_2)
orte_rt_ko_OBJECTS = $(am_orte_rt_ko_OBJECTS)
orte_rt_ko_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/orte/include/orte
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(liborte_la_SOURCES) $(orte_rt_ko_SOURCES)
DIST_SOURCES = $(am__liborte_la_SOURCES_DIST) \
	$(am__orte_rt_ko_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
liborte1HEADERS_INSTALL = $(INSTALL_HEADER)
liborte2HEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(liborte1_HEADERS) $(liborte2_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = rtl
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dmills/embedded/rtems/orte-0.3.1/admin/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/dmills/embedded/rtems/orte-0.3.1/admin/missing --run tar
AR = i386-rtems-ar
AUTOCONF = ${SHELL} /home/dmills/embedded/rtems/orte-0.3.1/admin/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dmills/embedded/rtems/orte-0.3.1/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dmills/embedded/rtems/orte-0.3.1/admin/missing --run automake-1.9
AWK = gawk
CC = i386-rtems-gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -Wall 
CONFIG_ADEOS_FALSE = 
CONFIG_ADEOS_TRUE = #
CONFIG_JORTE = 
CONFIG_JORTE_FALSE = 
CONFIG_JORTE_TRUE = #
CONFIG_ORTE_CYGWIN_FALSE = 
CONFIG_ORTE_CYGWIN_TRUE = #
CONFIG_ORTE_IDL = 
CONFIG_ORTE_IDL_FALSE = 
CONFIG_ORTE_IDL_TRUE = #
CONFIG_ORTE_KERNEL = no
CONFIG_ORTE_KERNEL_FALSE = 
CONFIG_ORTE_KERNEL_TRUE = #
CONFIG_ORTE_MINGW_FALSE = 
CONFIG_ORTE_MINGW_TRUE = #
CONFIG_ORTE_RT = 
CONFIG_ORTE_RT_FALSE = 
CONFIG_ORTE_RT_TRUE = #
CONFIG_ORTE_UNIX_FALSE = #
CONFIG_ORTE_UNIX_TRUE = 
CONFIG_ORTE_WIN_FALSE = 
CONFIG_ORTE_WIN_TRUE = #
CONFIG_RTHAL_FALSE = 
CONFIG_RTHAL_TRUE = #
CONFIG_RTLINUX_FALSE = 
CONFIG_RTLINUX_TRUE = #
CPP = i386-rtems-gcc -E
CPPFLAGS = 
CXX = i386-rtems-g++
CXXCPP = i386-rtems-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
INCLUDES = -I$(top_srcdir)/orte/include -I$(top_builddir)/orte/include
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBIDL_CFLAGS = 
LIBIDL_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINUX_AFLAGS = 
LINUX_ARCH = 
LINUX_ARFLAGS = 
LINUX_AS = 
LINUX_CC = 
LINUX_CFLAGS = 
LINUX_CROSS_COMPILE = 
LINUX_DIR = default
LINUX_KERNELRELEASE = 
LINUX_LD = 
LINUX_LDFLAGS = 
LINUX_MODULE_EXT = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_CURRENT = 1
LT_RELEASE = 0.3
LT_REVISION = 0
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/dmills/embedded/rtems/orte-0.3.1/admin/missing --run makeinfo
OBJEXT = o
ORTE_BINARY_AGE = 0
ORTE_INTERFACE_AGE = 0
ORTE_MAJOR_VERSION = 0
ORTE_MICRO_VERSION = 1
ORTE_MINOR_VERSION = 3
ORTE_VERSION = 0.3.1
PACKAGE = orte
PACKAGE_BUGREPORT = petr.smolik@wo.cz
PACKAGE_NAME = orte
PACKAGE_STRING = orte 0.3.1
PACKAGE_TARNAME = orte
PACKAGE_VERSION = 0.3.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = i386-rtems-ranlib
RTAI_CFLAGS = 
RTLINUX_CC = 
RTLINUX_CFLAGS = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = i386-rtems-strip
USE_RTAI_FALSE = 
USE_RTAI_TRUE = #
USE_RTLINUX_FALSE = 
USE_RTLINUX_TRUE = #
VERSION = 0.3.1
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = g77
ac_ct_RANLIB = 
ac_ct_STRIP = 
ac_pt_PKG_CONFIG = /usr/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i386-pc-rtems
host_alias = i386-rtems
host_cpu = i386
host_os = rtems
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/dmills/embedded/rtems/orte-0.3.1/admin/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
modulePROGRAMS_INSTALL = $(top_builddir)/modtool --install
moduledir = $(libdir)/modules/$(LINUX_KERNELRELEASE)/orte
oldincludedir = /usr/include
prefix = /opt/rtems
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i386-pc-rtems
target_alias = 
target_cpu = i386
target_os = rtems
target_vendor = pc
LIBORTE_FILES = \
cdr.c \
conv.c \
debug.c \
event.c \
fnmatch.c \
htimerNtp.c \
objectEntry.c \
objectEntryTimer.c \
objectUtils.c \
ORTEAppRecvThread.c \
ORTEAppSendThread.c \
ORTEDomainApp.c \
ORTEPublication.c \
ORTEPublicationTimer.c \
ORTESubscription.c \
ORTEDomain.c \
ORTEDomainMgr.c \
ORTEInit.c \
ORTEThreadUtils.c \
ORTETypeRegister.c \
ORTEVerbosity.c \
ORTEPattern.c \
ORTEMisc.c \
parameter.c \
RTPSAck.c \
RTPSCSTReader.c \
RTPSCSTReaderTimer.c \
RTPSCSTReaderProc.c \
RTPSCSTWriter.c \
RTPSCSTWriterTimer.c \
RTPSGap.c \
RTPSHeader.c \
RTPSHeardBeat.c \
RTPSInfoDST.c \
RTPSInfoREPLY.c \
RTPSInfoSRC.c \
RTPSInfoTS.c \
RTPSPad.c \
RTPSUtils.c \
RTPSVar.c \
RTPSIssue.c \
sock.c \
ul_gavl.c \
ul_gavlprim.c

LIBORTE_HDRS1 = \
../include/orte.h 

LIBORTE_HDRS2 = \
$(top_builddir)/orte/include/orte/orte_config.h \
../include/orte/cdr.h \
../include/orte/basic_types.h \
../include/orte/typedefs_defines_rtps.h \
../include/orte/defines_api.h \
../include/orte/typedefs_api.h \
../include/orte/protos_api.h 

#orte_rt_ko_SOURCES = $(LIBORTE_FILES)
#orte_rt_ko_LINK = $(top_builddir)/modtool --link -o $@
##SUBDIRS = rtl
# --------------- USER  SPACE ---------------
lib_LTLIBRARIES = liborte.la
liborte_la_SOURCES = $(LIBORTE_FILES)
liborte_la_LDFLAGS = \
    -version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
    -release $(LT_RELEASE) \
    -export-dynamic 

#    $(LDADDS)
liborte_la_CFLAGS = $(AM_CFLAGS)

# headers
liborte1dir = $(includedir)
liborte1_HEADERS = $(LIBORTE_HDRS1)
liborte2dir = $(includedir)/orte
liborte2_HEADERS = $(LIBORTE_HDRS2)
EXTRA_DIST = usedSections.txt Makefile Makefile.omk \
msvc pharlap

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  orte/liborte/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  orte/liborte/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
liborte.la: $(liborte_la_OBJECTS) $(liborte_la_DEPENDENCIES) 
	$(LINK) $(am_liborte_la_rpath) $(liborte_la_LDFLAGS) $(liborte_la_OBJECTS) $(liborte_la_LIBADD) $(LIBS)
install-modulePROGRAMS: $(module_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(moduledir)" || $(mkdir_p) "$(DESTDIR)$(moduledir)"
	@list='$(module_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(modulePROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(moduledir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(modulePROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(moduledir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-modulePROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(module_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(moduledir)/$$f'"; \
	  rm -f "$(DESTDIR)$(moduledir)/$$f"; \
	done

clean-modulePROGRAMS:
	@list='$(module_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
orte_rt.ko$(EXEEXT): $(orte_rt_ko_OBJECTS) $(orte_rt_ko_DEPENDENCIES) 
	@rm -f orte_rt.ko$(EXEEXT)
	$(orte_rt_ko_LINK) $(orte_rt_ko_LDFLAGS) $(orte_rt_ko_OBJECTS) $(orte_rt_ko_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ORTEAppRecvThread.Po
include ./$(DEPDIR)/ORTEAppSendThread.Po
include ./$(DEPDIR)/ORTEDomain.Po
include ./$(DEPDIR)/ORTEDomainApp.Po
include ./$(DEPDIR)/ORTEDomainMgr.Po
include ./$(DEPDIR)/ORTEInit.Po
include ./$(DEPDIR)/ORTEMisc.Po
include ./$(DEPDIR)/ORTEPattern.Po
include ./$(DEPDIR)/ORTEPublication.Po
include ./$(DEPDIR)/ORTEPublicationTimer.Po
include ./$(DEPDIR)/ORTESubscription.Po
include ./$(DEPDIR)/ORTEThreadUtils.Po
include ./$(DEPDIR)/ORTETypeRegister.Po
include ./$(DEPDIR)/ORTEVerbosity.Po
include ./$(DEPDIR)/RTPSAck.Po
include ./$(DEPDIR)/RTPSCSTReader.Po
include ./$(DEPDIR)/RTPSCSTReaderProc.Po
include ./$(DEPDIR)/RTPSCSTReaderTimer.Po
include ./$(DEPDIR)/RTPSCSTWriter.Po
include ./$(DEPDIR)/RTPSCSTWriterTimer.Po
include ./$(DEPDIR)/RTPSGap.Po
include ./$(DEPDIR)/RTPSHeader.Po
include ./$(DEPDIR)/RTPSHeardBeat.Po
include ./$(DEPDIR)/RTPSInfoDST.Po
include ./$(DEPDIR)/RTPSInfoREPLY.Po
include ./$(DEPDIR)/RTPSInfoSRC.Po
include ./$(DEPDIR)/RTPSInfoTS.Po
include ./$(DEPDIR)/RTPSIssue.Po
include ./$(DEPDIR)/RTPSPad.Po
include ./$(DEPDIR)/RTPSUtils.Po
include ./$(DEPDIR)/RTPSVar.Po
include ./$(DEPDIR)/cdr.Po
include ./$(DEPDIR)/conv.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/event.Po
include ./$(DEPDIR)/fnmatch.Po
include ./$(DEPDIR)/htimerNtp.Po
include ./$(DEPDIR)/liborte_la-ORTEAppRecvThread.Plo
include ./$(DEPDIR)/liborte_la-ORTEAppSendThread.Plo
include ./$(DEPDIR)/liborte_la-ORTEDomain.Plo
include ./$(DEPDIR)/liborte_la-ORTEDomainApp.Plo
include ./$(DEPDIR)/liborte_la-ORTEDomainMgr.Plo
include ./$(DEPDIR)/liborte_la-ORTEInit.Plo
include ./$(DEPDIR)/liborte_la-ORTEMisc.Plo
include ./$(DEPDIR)/liborte_la-ORTEPattern.Plo
include ./$(DEPDIR)/liborte_la-ORTEPublication.Plo
include ./$(DEPDIR)/liborte_la-ORTEPublicationTimer.Plo
include ./$(DEPDIR)/liborte_la-ORTESubscription.Plo
include ./$(DEPDIR)/liborte_la-ORTEThreadUtils.Plo
include ./$(DEPDIR)/liborte_la-ORTETypeRegister.Plo
include ./$(DEPDIR)/liborte_la-ORTEVerbosity.Plo
include ./$(DEPDIR)/liborte_la-RTPSAck.Plo
include ./$(DEPDIR)/liborte_la-RTPSCSTReader.Plo
include ./$(DEPDIR)/liborte_la-RTPSCSTReaderProc.Plo
include ./$(DEPDIR)/liborte_la-RTPSCSTReaderTimer.Plo
include ./$(DEPDIR)/liborte_la-RTPSCSTWriter.Plo
include ./$(DEPDIR)/liborte_la-RTPSCSTWriterTimer.Plo
include ./$(DEPDIR)/liborte_la-RTPSGap.Plo
include ./$(DEPDIR)/liborte_la-RTPSHeader.Plo
include ./$(DEPDIR)/liborte_la-RTPSHeardBeat.Plo
include ./$(DEPDIR)/liborte_la-RTPSInfoDST.Plo
include ./$(DEPDIR)/liborte_la-RTPSInfoREPLY.Plo
include ./$(DEPDIR)/liborte_la-RTPSInfoSRC.Plo
include ./$(DEPDIR)/liborte_la-RTPSInfoTS.Plo
include ./$(DEPDIR)/liborte_la-RTPSIssue.Plo
include ./$(DEPDIR)/liborte_la-RTPSPad.Plo
include ./$(DEPDIR)/liborte_la-RTPSUtils.Plo
include ./$(DEPDIR)/liborte_la-RTPSVar.Plo
include ./$(DEPDIR)/liborte_la-cdr.Plo
include ./$(DEPDIR)/liborte_la-conv.Plo
include ./$(DEPDIR)/liborte_la-debug.Plo
include ./$(DEPDIR)/liborte_la-event.Plo
include ./$(DEPDIR)/liborte_la-fnmatch.Plo
include ./$(DEPDIR)/liborte_la-htimerNtp.Plo
include ./$(DEPDIR)/liborte_la-objectEntry.Plo
include ./$(DEPDIR)/liborte_la-objectEntryTimer.Plo
include ./$(DEPDIR)/liborte_la-objectUtils.Plo
include ./$(DEPDIR)/liborte_la-parameter.Plo
include ./$(DEPDIR)/liborte_la-sock.Plo
include ./$(DEPDIR)/liborte_la-ul_gavl.Plo
include ./$(DEPDIR)/liborte_la-ul_gavlprim.Plo
include ./$(DEPDIR)/objectEntry.Po
include ./$(DEPDIR)/objectEntryTimer.Po
include ./$(DEPDIR)/objectUtils.Po
include ./$(DEPDIR)/parameter.Po
include ./$(DEPDIR)/sock.Po
include ./$(DEPDIR)/ul_gavl.Po
include ./$(DEPDIR)/ul_gavlprim.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

liborte_la-cdr.lo: cdr.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-cdr.lo -MD -MP -MF "$(DEPDIR)/liborte_la-cdr.Tpo" -c -o liborte_la-cdr.lo `test -f 'cdr.c' || echo '$(srcdir)/'`cdr.c; \
	then mv -f "$(DEPDIR)/liborte_la-cdr.Tpo" "$(DEPDIR)/liborte_la-cdr.Plo"; else rm -f "$(DEPDIR)/liborte_la-cdr.Tpo"; exit 1; fi
#	source='cdr.c' object='liborte_la-cdr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-cdr.lo `test -f 'cdr.c' || echo '$(srcdir)/'`cdr.c

liborte_la-conv.lo: conv.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-conv.lo -MD -MP -MF "$(DEPDIR)/liborte_la-conv.Tpo" -c -o liborte_la-conv.lo `test -f 'conv.c' || echo '$(srcdir)/'`conv.c; \
	then mv -f "$(DEPDIR)/liborte_la-conv.Tpo" "$(DEPDIR)/liborte_la-conv.Plo"; else rm -f "$(DEPDIR)/liborte_la-conv.Tpo"; exit 1; fi
#	source='conv.c' object='liborte_la-conv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-conv.lo `test -f 'conv.c' || echo '$(srcdir)/'`conv.c

liborte_la-debug.lo: debug.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-debug.lo -MD -MP -MF "$(DEPDIR)/liborte_la-debug.Tpo" -c -o liborte_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c; \
	then mv -f "$(DEPDIR)/liborte_la-debug.Tpo" "$(DEPDIR)/liborte_la-debug.Plo"; else rm -f "$(DEPDIR)/liborte_la-debug.Tpo"; exit 1; fi
#	source='debug.c' object='liborte_la-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

liborte_la-event.lo: event.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-event.lo -MD -MP -MF "$(DEPDIR)/liborte_la-event.Tpo" -c -o liborte_la-event.lo `test -f 'event.c' || echo '$(srcdir)/'`event.c; \
	then mv -f "$(DEPDIR)/liborte_la-event.Tpo" "$(DEPDIR)/liborte_la-event.Plo"; else rm -f "$(DEPDIR)/liborte_la-event.Tpo"; exit 1; fi
#	source='event.c' object='liborte_la-event.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-event.lo `test -f 'event.c' || echo '$(srcdir)/'`event.c

liborte_la-fnmatch.lo: fnmatch.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-fnmatch.lo -MD -MP -MF "$(DEPDIR)/liborte_la-fnmatch.Tpo" -c -o liborte_la-fnmatch.lo `test -f 'fnmatch.c' || echo '$(srcdir)/'`fnmatch.c; \
	then mv -f "$(DEPDIR)/liborte_la-fnmatch.Tpo" "$(DEPDIR)/liborte_la-fnmatch.Plo"; else rm -f "$(DEPDIR)/liborte_la-fnmatch.Tpo"; exit 1; fi
#	source='fnmatch.c' object='liborte_la-fnmatch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-fnmatch.lo `test -f 'fnmatch.c' || echo '$(srcdir)/'`fnmatch.c

liborte_la-htimerNtp.lo: htimerNtp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-htimerNtp.lo -MD -MP -MF "$(DEPDIR)/liborte_la-htimerNtp.Tpo" -c -o liborte_la-htimerNtp.lo `test -f 'htimerNtp.c' || echo '$(srcdir)/'`htimerNtp.c; \
	then mv -f "$(DEPDIR)/liborte_la-htimerNtp.Tpo" "$(DEPDIR)/liborte_la-htimerNtp.Plo"; else rm -f "$(DEPDIR)/liborte_la-htimerNtp.Tpo"; exit 1; fi
#	source='htimerNtp.c' object='liborte_la-htimerNtp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-htimerNtp.lo `test -f 'htimerNtp.c' || echo '$(srcdir)/'`htimerNtp.c

liborte_la-objectEntry.lo: objectEntry.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-objectEntry.lo -MD -MP -MF "$(DEPDIR)/liborte_la-objectEntry.Tpo" -c -o liborte_la-objectEntry.lo `test -f 'objectEntry.c' || echo '$(srcdir)/'`objectEntry.c; \
	then mv -f "$(DEPDIR)/liborte_la-objectEntry.Tpo" "$(DEPDIR)/liborte_la-objectEntry.Plo"; else rm -f "$(DEPDIR)/liborte_la-objectEntry.Tpo"; exit 1; fi
#	source='objectEntry.c' object='liborte_la-objectEntry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-objectEntry.lo `test -f 'objectEntry.c' || echo '$(srcdir)/'`objectEntry.c

liborte_la-objectEntryTimer.lo: objectEntryTimer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-objectEntryTimer.lo -MD -MP -MF "$(DEPDIR)/liborte_la-objectEntryTimer.Tpo" -c -o liborte_la-objectEntryTimer.lo `test -f 'objectEntryTimer.c' || echo '$(srcdir)/'`objectEntryTimer.c; \
	then mv -f "$(DEPDIR)/liborte_la-objectEntryTimer.Tpo" "$(DEPDIR)/liborte_la-objectEntryTimer.Plo"; else rm -f "$(DEPDIR)/liborte_la-objectEntryTimer.Tpo"; exit 1; fi
#	source='objectEntryTimer.c' object='liborte_la-objectEntryTimer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-objectEntryTimer.lo `test -f 'objectEntryTimer.c' || echo '$(srcdir)/'`objectEntryTimer.c

liborte_la-objectUtils.lo: objectUtils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-objectUtils.lo -MD -MP -MF "$(DEPDIR)/liborte_la-objectUtils.Tpo" -c -o liborte_la-objectUtils.lo `test -f 'objectUtils.c' || echo '$(srcdir)/'`objectUtils.c; \
	then mv -f "$(DEPDIR)/liborte_la-objectUtils.Tpo" "$(DEPDIR)/liborte_la-objectUtils.Plo"; else rm -f "$(DEPDIR)/liborte_la-objectUtils.Tpo"; exit 1; fi
#	source='objectUtils.c' object='liborte_la-objectUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-objectUtils.lo `test -f 'objectUtils.c' || echo '$(srcdir)/'`objectUtils.c

liborte_la-ORTEAppRecvThread.lo: ORTEAppRecvThread.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEAppRecvThread.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEAppRecvThread.Tpo" -c -o liborte_la-ORTEAppRecvThread.lo `test -f 'ORTEAppRecvThread.c' || echo '$(srcdir)/'`ORTEAppRecvThread.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEAppRecvThread.Tpo" "$(DEPDIR)/liborte_la-ORTEAppRecvThread.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEAppRecvThread.Tpo"; exit 1; fi
#	source='ORTEAppRecvThread.c' object='liborte_la-ORTEAppRecvThread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEAppRecvThread.lo `test -f 'ORTEAppRecvThread.c' || echo '$(srcdir)/'`ORTEAppRecvThread.c

liborte_la-ORTEAppSendThread.lo: ORTEAppSendThread.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEAppSendThread.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEAppSendThread.Tpo" -c -o liborte_la-ORTEAppSendThread.lo `test -f 'ORTEAppSendThread.c' || echo '$(srcdir)/'`ORTEAppSendThread.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEAppSendThread.Tpo" "$(DEPDIR)/liborte_la-ORTEAppSendThread.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEAppSendThread.Tpo"; exit 1; fi
#	source='ORTEAppSendThread.c' object='liborte_la-ORTEAppSendThread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEAppSendThread.lo `test -f 'ORTEAppSendThread.c' || echo '$(srcdir)/'`ORTEAppSendThread.c

liborte_la-ORTEDomainApp.lo: ORTEDomainApp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEDomainApp.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEDomainApp.Tpo" -c -o liborte_la-ORTEDomainApp.lo `test -f 'ORTEDomainApp.c' || echo '$(srcdir)/'`ORTEDomainApp.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEDomainApp.Tpo" "$(DEPDIR)/liborte_la-ORTEDomainApp.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEDomainApp.Tpo"; exit 1; fi
#	source='ORTEDomainApp.c' object='liborte_la-ORTEDomainApp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEDomainApp.lo `test -f 'ORTEDomainApp.c' || echo '$(srcdir)/'`ORTEDomainApp.c

liborte_la-ORTEPublication.lo: ORTEPublication.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEPublication.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEPublication.Tpo" -c -o liborte_la-ORTEPublication.lo `test -f 'ORTEPublication.c' || echo '$(srcdir)/'`ORTEPublication.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEPublication.Tpo" "$(DEPDIR)/liborte_la-ORTEPublication.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEPublication.Tpo"; exit 1; fi
#	source='ORTEPublication.c' object='liborte_la-ORTEPublication.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEPublication.lo `test -f 'ORTEPublication.c' || echo '$(srcdir)/'`ORTEPublication.c

liborte_la-ORTEPublicationTimer.lo: ORTEPublicationTimer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEPublicationTimer.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEPublicationTimer.Tpo" -c -o liborte_la-ORTEPublicationTimer.lo `test -f 'ORTEPublicationTimer.c' || echo '$(srcdir)/'`ORTEPublicationTimer.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEPublicationTimer.Tpo" "$(DEPDIR)/liborte_la-ORTEPublicationTimer.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEPublicationTimer.Tpo"; exit 1; fi
#	source='ORTEPublicationTimer.c' object='liborte_la-ORTEPublicationTimer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEPublicationTimer.lo `test -f 'ORTEPublicationTimer.c' || echo '$(srcdir)/'`ORTEPublicationTimer.c

liborte_la-ORTESubscription.lo: ORTESubscription.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTESubscription.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTESubscription.Tpo" -c -o liborte_la-ORTESubscription.lo `test -f 'ORTESubscription.c' || echo '$(srcdir)/'`ORTESubscription.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTESubscription.Tpo" "$(DEPDIR)/liborte_la-ORTESubscription.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTESubscription.Tpo"; exit 1; fi
#	source='ORTESubscription.c' object='liborte_la-ORTESubscription.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTESubscription.lo `test -f 'ORTESubscription.c' || echo '$(srcdir)/'`ORTESubscription.c

liborte_la-ORTEDomain.lo: ORTEDomain.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEDomain.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEDomain.Tpo" -c -o liborte_la-ORTEDomain.lo `test -f 'ORTEDomain.c' || echo '$(srcdir)/'`ORTEDomain.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEDomain.Tpo" "$(DEPDIR)/liborte_la-ORTEDomain.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEDomain.Tpo"; exit 1; fi
#	source='ORTEDomain.c' object='liborte_la-ORTEDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEDomain.lo `test -f 'ORTEDomain.c' || echo '$(srcdir)/'`ORTEDomain.c

liborte_la-ORTEDomainMgr.lo: ORTEDomainMgr.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEDomainMgr.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEDomainMgr.Tpo" -c -o liborte_la-ORTEDomainMgr.lo `test -f 'ORTEDomainMgr.c' || echo '$(srcdir)/'`ORTEDomainMgr.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEDomainMgr.Tpo" "$(DEPDIR)/liborte_la-ORTEDomainMgr.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEDomainMgr.Tpo"; exit 1; fi
#	source='ORTEDomainMgr.c' object='liborte_la-ORTEDomainMgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEDomainMgr.lo `test -f 'ORTEDomainMgr.c' || echo '$(srcdir)/'`ORTEDomainMgr.c

liborte_la-ORTEInit.lo: ORTEInit.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEInit.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEInit.Tpo" -c -o liborte_la-ORTEInit.lo `test -f 'ORTEInit.c' || echo '$(srcdir)/'`ORTEInit.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEInit.Tpo" "$(DEPDIR)/liborte_la-ORTEInit.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEInit.Tpo"; exit 1; fi
#	source='ORTEInit.c' object='liborte_la-ORTEInit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEInit.lo `test -f 'ORTEInit.c' || echo '$(srcdir)/'`ORTEInit.c

liborte_la-ORTEThreadUtils.lo: ORTEThreadUtils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEThreadUtils.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEThreadUtils.Tpo" -c -o liborte_la-ORTEThreadUtils.lo `test -f 'ORTEThreadUtils.c' || echo '$(srcdir)/'`ORTEThreadUtils.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEThreadUtils.Tpo" "$(DEPDIR)/liborte_la-ORTEThreadUtils.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEThreadUtils.Tpo"; exit 1; fi
#	source='ORTEThreadUtils.c' object='liborte_la-ORTEThreadUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEThreadUtils.lo `test -f 'ORTEThreadUtils.c' || echo '$(srcdir)/'`ORTEThreadUtils.c

liborte_la-ORTETypeRegister.lo: ORTETypeRegister.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTETypeRegister.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTETypeRegister.Tpo" -c -o liborte_la-ORTETypeRegister.lo `test -f 'ORTETypeRegister.c' || echo '$(srcdir)/'`ORTETypeRegister.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTETypeRegister.Tpo" "$(DEPDIR)/liborte_la-ORTETypeRegister.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTETypeRegister.Tpo"; exit 1; fi
#	source='ORTETypeRegister.c' object='liborte_la-ORTETypeRegister.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTETypeRegister.lo `test -f 'ORTETypeRegister.c' || echo '$(srcdir)/'`ORTETypeRegister.c

liborte_la-ORTEVerbosity.lo: ORTEVerbosity.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEVerbosity.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEVerbosity.Tpo" -c -o liborte_la-ORTEVerbosity.lo `test -f 'ORTEVerbosity.c' || echo '$(srcdir)/'`ORTEVerbosity.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEVerbosity.Tpo" "$(DEPDIR)/liborte_la-ORTEVerbosity.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEVerbosity.Tpo"; exit 1; fi
#	source='ORTEVerbosity.c' object='liborte_la-ORTEVerbosity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEVerbosity.lo `test -f 'ORTEVerbosity.c' || echo '$(srcdir)/'`ORTEVerbosity.c

liborte_la-ORTEPattern.lo: ORTEPattern.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEPattern.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEPattern.Tpo" -c -o liborte_la-ORTEPattern.lo `test -f 'ORTEPattern.c' || echo '$(srcdir)/'`ORTEPattern.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEPattern.Tpo" "$(DEPDIR)/liborte_la-ORTEPattern.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEPattern.Tpo"; exit 1; fi
#	source='ORTEPattern.c' object='liborte_la-ORTEPattern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEPattern.lo `test -f 'ORTEPattern.c' || echo '$(srcdir)/'`ORTEPattern.c

liborte_la-ORTEMisc.lo: ORTEMisc.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ORTEMisc.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ORTEMisc.Tpo" -c -o liborte_la-ORTEMisc.lo `test -f 'ORTEMisc.c' || echo '$(srcdir)/'`ORTEMisc.c; \
	then mv -f "$(DEPDIR)/liborte_la-ORTEMisc.Tpo" "$(DEPDIR)/liborte_la-ORTEMisc.Plo"; else rm -f "$(DEPDIR)/liborte_la-ORTEMisc.Tpo"; exit 1; fi
#	source='ORTEMisc.c' object='liborte_la-ORTEMisc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ORTEMisc.lo `test -f 'ORTEMisc.c' || echo '$(srcdir)/'`ORTEMisc.c

liborte_la-parameter.lo: parameter.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-parameter.lo -MD -MP -MF "$(DEPDIR)/liborte_la-parameter.Tpo" -c -o liborte_la-parameter.lo `test -f 'parameter.c' || echo '$(srcdir)/'`parameter.c; \
	then mv -f "$(DEPDIR)/liborte_la-parameter.Tpo" "$(DEPDIR)/liborte_la-parameter.Plo"; else rm -f "$(DEPDIR)/liborte_la-parameter.Tpo"; exit 1; fi
#	source='parameter.c' object='liborte_la-parameter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-parameter.lo `test -f 'parameter.c' || echo '$(srcdir)/'`parameter.c

liborte_la-RTPSAck.lo: RTPSAck.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSAck.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSAck.Tpo" -c -o liborte_la-RTPSAck.lo `test -f 'RTPSAck.c' || echo '$(srcdir)/'`RTPSAck.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSAck.Tpo" "$(DEPDIR)/liborte_la-RTPSAck.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSAck.Tpo"; exit 1; fi
#	source='RTPSAck.c' object='liborte_la-RTPSAck.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSAck.lo `test -f 'RTPSAck.c' || echo '$(srcdir)/'`RTPSAck.c

liborte_la-RTPSCSTReader.lo: RTPSCSTReader.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSCSTReader.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSCSTReader.Tpo" -c -o liborte_la-RTPSCSTReader.lo `test -f 'RTPSCSTReader.c' || echo '$(srcdir)/'`RTPSCSTReader.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSCSTReader.Tpo" "$(DEPDIR)/liborte_la-RTPSCSTReader.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSCSTReader.Tpo"; exit 1; fi
#	source='RTPSCSTReader.c' object='liborte_la-RTPSCSTReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSCSTReader.lo `test -f 'RTPSCSTReader.c' || echo '$(srcdir)/'`RTPSCSTReader.c

liborte_la-RTPSCSTReaderTimer.lo: RTPSCSTReaderTimer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSCSTReaderTimer.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSCSTReaderTimer.Tpo" -c -o liborte_la-RTPSCSTReaderTimer.lo `test -f 'RTPSCSTReaderTimer.c' || echo '$(srcdir)/'`RTPSCSTReaderTimer.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSCSTReaderTimer.Tpo" "$(DEPDIR)/liborte_la-RTPSCSTReaderTimer.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSCSTReaderTimer.Tpo"; exit 1; fi
#	source='RTPSCSTReaderTimer.c' object='liborte_la-RTPSCSTReaderTimer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSCSTReaderTimer.lo `test -f 'RTPSCSTReaderTimer.c' || echo '$(srcdir)/'`RTPSCSTReaderTimer.c

liborte_la-RTPSCSTReaderProc.lo: RTPSCSTReaderProc.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSCSTReaderProc.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSCSTReaderProc.Tpo" -c -o liborte_la-RTPSCSTReaderProc.lo `test -f 'RTPSCSTReaderProc.c' || echo '$(srcdir)/'`RTPSCSTReaderProc.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSCSTReaderProc.Tpo" "$(DEPDIR)/liborte_la-RTPSCSTReaderProc.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSCSTReaderProc.Tpo"; exit 1; fi
#	source='RTPSCSTReaderProc.c' object='liborte_la-RTPSCSTReaderProc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSCSTReaderProc.lo `test -f 'RTPSCSTReaderProc.c' || echo '$(srcdir)/'`RTPSCSTReaderProc.c

liborte_la-RTPSCSTWriter.lo: RTPSCSTWriter.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSCSTWriter.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSCSTWriter.Tpo" -c -o liborte_la-RTPSCSTWriter.lo `test -f 'RTPSCSTWriter.c' || echo '$(srcdir)/'`RTPSCSTWriter.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSCSTWriter.Tpo" "$(DEPDIR)/liborte_la-RTPSCSTWriter.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSCSTWriter.Tpo"; exit 1; fi
#	source='RTPSCSTWriter.c' object='liborte_la-RTPSCSTWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSCSTWriter.lo `test -f 'RTPSCSTWriter.c' || echo '$(srcdir)/'`RTPSCSTWriter.c

liborte_la-RTPSCSTWriterTimer.lo: RTPSCSTWriterTimer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSCSTWriterTimer.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSCSTWriterTimer.Tpo" -c -o liborte_la-RTPSCSTWriterTimer.lo `test -f 'RTPSCSTWriterTimer.c' || echo '$(srcdir)/'`RTPSCSTWriterTimer.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSCSTWriterTimer.Tpo" "$(DEPDIR)/liborte_la-RTPSCSTWriterTimer.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSCSTWriterTimer.Tpo"; exit 1; fi
#	source='RTPSCSTWriterTimer.c' object='liborte_la-RTPSCSTWriterTimer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSCSTWriterTimer.lo `test -f 'RTPSCSTWriterTimer.c' || echo '$(srcdir)/'`RTPSCSTWriterTimer.c

liborte_la-RTPSGap.lo: RTPSGap.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSGap.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSGap.Tpo" -c -o liborte_la-RTPSGap.lo `test -f 'RTPSGap.c' || echo '$(srcdir)/'`RTPSGap.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSGap.Tpo" "$(DEPDIR)/liborte_la-RTPSGap.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSGap.Tpo"; exit 1; fi
#	source='RTPSGap.c' object='liborte_la-RTPSGap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSGap.lo `test -f 'RTPSGap.c' || echo '$(srcdir)/'`RTPSGap.c

liborte_la-RTPSHeader.lo: RTPSHeader.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSHeader.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSHeader.Tpo" -c -o liborte_la-RTPSHeader.lo `test -f 'RTPSHeader.c' || echo '$(srcdir)/'`RTPSHeader.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSHeader.Tpo" "$(DEPDIR)/liborte_la-RTPSHeader.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSHeader.Tpo"; exit 1; fi
#	source='RTPSHeader.c' object='liborte_la-RTPSHeader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSHeader.lo `test -f 'RTPSHeader.c' || echo '$(srcdir)/'`RTPSHeader.c

liborte_la-RTPSHeardBeat.lo: RTPSHeardBeat.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSHeardBeat.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSHeardBeat.Tpo" -c -o liborte_la-RTPSHeardBeat.lo `test -f 'RTPSHeardBeat.c' || echo '$(srcdir)/'`RTPSHeardBeat.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSHeardBeat.Tpo" "$(DEPDIR)/liborte_la-RTPSHeardBeat.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSHeardBeat.Tpo"; exit 1; fi
#	source='RTPSHeardBeat.c' object='liborte_la-RTPSHeardBeat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSHeardBeat.lo `test -f 'RTPSHeardBeat.c' || echo '$(srcdir)/'`RTPSHeardBeat.c

liborte_la-RTPSInfoDST.lo: RTPSInfoDST.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSInfoDST.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSInfoDST.Tpo" -c -o liborte_la-RTPSInfoDST.lo `test -f 'RTPSInfoDST.c' || echo '$(srcdir)/'`RTPSInfoDST.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSInfoDST.Tpo" "$(DEPDIR)/liborte_la-RTPSInfoDST.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSInfoDST.Tpo"; exit 1; fi
#	source='RTPSInfoDST.c' object='liborte_la-RTPSInfoDST.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSInfoDST.lo `test -f 'RTPSInfoDST.c' || echo '$(srcdir)/'`RTPSInfoDST.c

liborte_la-RTPSInfoREPLY.lo: RTPSInfoREPLY.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSInfoREPLY.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSInfoREPLY.Tpo" -c -o liborte_la-RTPSInfoREPLY.lo `test -f 'RTPSInfoREPLY.c' || echo '$(srcdir)/'`RTPSInfoREPLY.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSInfoREPLY.Tpo" "$(DEPDIR)/liborte_la-RTPSInfoREPLY.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSInfoREPLY.Tpo"; exit 1; fi
#	source='RTPSInfoREPLY.c' object='liborte_la-RTPSInfoREPLY.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSInfoREPLY.lo `test -f 'RTPSInfoREPLY.c' || echo '$(srcdir)/'`RTPSInfoREPLY.c

liborte_la-RTPSInfoSRC.lo: RTPSInfoSRC.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSInfoSRC.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSInfoSRC.Tpo" -c -o liborte_la-RTPSInfoSRC.lo `test -f 'RTPSInfoSRC.c' || echo '$(srcdir)/'`RTPSInfoSRC.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSInfoSRC.Tpo" "$(DEPDIR)/liborte_la-RTPSInfoSRC.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSInfoSRC.Tpo"; exit 1; fi
#	source='RTPSInfoSRC.c' object='liborte_la-RTPSInfoSRC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSInfoSRC.lo `test -f 'RTPSInfoSRC.c' || echo '$(srcdir)/'`RTPSInfoSRC.c

liborte_la-RTPSInfoTS.lo: RTPSInfoTS.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSInfoTS.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSInfoTS.Tpo" -c -o liborte_la-RTPSInfoTS.lo `test -f 'RTPSInfoTS.c' || echo '$(srcdir)/'`RTPSInfoTS.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSInfoTS.Tpo" "$(DEPDIR)/liborte_la-RTPSInfoTS.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSInfoTS.Tpo"; exit 1; fi
#	source='RTPSInfoTS.c' object='liborte_la-RTPSInfoTS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSInfoTS.lo `test -f 'RTPSInfoTS.c' || echo '$(srcdir)/'`RTPSInfoTS.c

liborte_la-RTPSPad.lo: RTPSPad.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSPad.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSPad.Tpo" -c -o liborte_la-RTPSPad.lo `test -f 'RTPSPad.c' || echo '$(srcdir)/'`RTPSPad.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSPad.Tpo" "$(DEPDIR)/liborte_la-RTPSPad.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSPad.Tpo"; exit 1; fi
#	source='RTPSPad.c' object='liborte_la-RTPSPad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSPad.lo `test -f 'RTPSPad.c' || echo '$(srcdir)/'`RTPSPad.c

liborte_la-RTPSUtils.lo: RTPSUtils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSUtils.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSUtils.Tpo" -c -o liborte_la-RTPSUtils.lo `test -f 'RTPSUtils.c' || echo '$(srcdir)/'`RTPSUtils.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSUtils.Tpo" "$(DEPDIR)/liborte_la-RTPSUtils.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSUtils.Tpo"; exit 1; fi
#	source='RTPSUtils.c' object='liborte_la-RTPSUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSUtils.lo `test -f 'RTPSUtils.c' || echo '$(srcdir)/'`RTPSUtils.c

liborte_la-RTPSVar.lo: RTPSVar.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSVar.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSVar.Tpo" -c -o liborte_la-RTPSVar.lo `test -f 'RTPSVar.c' || echo '$(srcdir)/'`RTPSVar.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSVar.Tpo" "$(DEPDIR)/liborte_la-RTPSVar.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSVar.Tpo"; exit 1; fi
#	source='RTPSVar.c' object='liborte_la-RTPSVar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSVar.lo `test -f 'RTPSVar.c' || echo '$(srcdir)/'`RTPSVar.c

liborte_la-RTPSIssue.lo: RTPSIssue.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-RTPSIssue.lo -MD -MP -MF "$(DEPDIR)/liborte_la-RTPSIssue.Tpo" -c -o liborte_la-RTPSIssue.lo `test -f 'RTPSIssue.c' || echo '$(srcdir)/'`RTPSIssue.c; \
	then mv -f "$(DEPDIR)/liborte_la-RTPSIssue.Tpo" "$(DEPDIR)/liborte_la-RTPSIssue.Plo"; else rm -f "$(DEPDIR)/liborte_la-RTPSIssue.Tpo"; exit 1; fi
#	source='RTPSIssue.c' object='liborte_la-RTPSIssue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-RTPSIssue.lo `test -f 'RTPSIssue.c' || echo '$(srcdir)/'`RTPSIssue.c

liborte_la-sock.lo: sock.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-sock.lo -MD -MP -MF "$(DEPDIR)/liborte_la-sock.Tpo" -c -o liborte_la-sock.lo `test -f 'sock.c' || echo '$(srcdir)/'`sock.c; \
	then mv -f "$(DEPDIR)/liborte_la-sock.Tpo" "$(DEPDIR)/liborte_la-sock.Plo"; else rm -f "$(DEPDIR)/liborte_la-sock.Tpo"; exit 1; fi
#	source='sock.c' object='liborte_la-sock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-sock.lo `test -f 'sock.c' || echo '$(srcdir)/'`sock.c

liborte_la-ul_gavl.lo: ul_gavl.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ul_gavl.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ul_gavl.Tpo" -c -o liborte_la-ul_gavl.lo `test -f 'ul_gavl.c' || echo '$(srcdir)/'`ul_gavl.c; \
	then mv -f "$(DEPDIR)/liborte_la-ul_gavl.Tpo" "$(DEPDIR)/liborte_la-ul_gavl.Plo"; else rm -f "$(DEPDIR)/liborte_la-ul_gavl.Tpo"; exit 1; fi
#	source='ul_gavl.c' object='liborte_la-ul_gavl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ul_gavl.lo `test -f 'ul_gavl.c' || echo '$(srcdir)/'`ul_gavl.c

liborte_la-ul_gavlprim.lo: ul_gavlprim.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -MT liborte_la-ul_gavlprim.lo -MD -MP -MF "$(DEPDIR)/liborte_la-ul_gavlprim.Tpo" -c -o liborte_la-ul_gavlprim.lo `test -f 'ul_gavlprim.c' || echo '$(srcdir)/'`ul_gavlprim.c; \
	then mv -f "$(DEPDIR)/liborte_la-ul_gavlprim.Tpo" "$(DEPDIR)/liborte_la-ul_gavlprim.Plo"; else rm -f "$(DEPDIR)/liborte_la-ul_gavlprim.Tpo"; exit 1; fi
#	source='ul_gavlprim.c' object='liborte_la-ul_gavlprim.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liborte_la_CFLAGS) $(CFLAGS) -c -o liborte_la-ul_gavlprim.lo `test -f 'ul_gavlprim.c' || echo '$(srcdir)/'`ul_gavlprim.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-liborte1HEADERS: $(liborte1_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(liborte1dir)" || $(mkdir_p) "$(DESTDIR)$(liborte1dir)"
	@list='$(liborte1_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(liborte1HEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(liborte1dir)/$$f'"; \
	  $(liborte1HEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(liborte1dir)/$$f"; \
	done

uninstall-liborte1HEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(liborte1_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(liborte1dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(liborte1dir)/$$f"; \
	done
install-liborte2HEADERS: $(liborte2_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(liborte2dir)" || $(mkdir_p) "$(DESTDIR)$(liborte2dir)"
	@list='$(liborte2_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(liborte2HEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(liborte2dir)/$$f'"; \
	  $(liborte2HEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(liborte2dir)/$$f"; \
	done

uninstall-liborte2HEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(liborte2_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(liborte2dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(liborte2dir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/$(top_builddir)/orte/include/orte $(distdir)/../include $(distdir)/../include/orte
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(liborte1dir)" "$(DESTDIR)$(liborte2dir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-modulePROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-liborte1HEADERS install-liborte2HEADERS \
	install-modulePROGRAMS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-liborte1HEADERS uninstall-liborte2HEADERS \
	uninstall-modulePROGRAMS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-modulePROGRAMS clean-recursive ctags ctags-recursive \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-liborte1HEADERS install-liborte2HEADERS install-man \
	install-modulePROGRAMS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-liborte1HEADERS \
	uninstall-liborte2HEADERS uninstall-modulePROGRAMS


dist-hook:
	cp -f  $(srcdir)/Makefile $(distdir)/Makefile
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
