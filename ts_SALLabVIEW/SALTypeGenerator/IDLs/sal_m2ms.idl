module m2ms {
	struct ActuatorLimitSwitches {
	  boolean	forward[72];
	  boolean	reverse[72];
	};
	#pragma keylist ActuatorLimitSwitches
	struct AxialActuatorAbsolutePositionSteps {
	  long	axialAbsolutePositionSteps[72];
	};
	#pragma keylist AxialActuatorAbsolutePositionSteps
	struct AxialActuatorPositionAbsoluteEncoderPositionMeasured {
	  double	axialEncoderPositionMeasured[72];
	};
	#pragma keylist AxialActuatorPositionAbsoluteEncoderPositionMeasured
	struct AxialForcesMeasured {
	  double	axialForceMeasured[72];
	};
	#pragma keylist AxialForcesMeasured
	struct MirrorPositionMeasured {
	  double	xTilt;
	  double	yTilt;
	  double	piston;
	  double	xPosition;
	  double	yPosition;
	  double	theta_z_position;
	};
	#pragma keylist MirrorPositionMeasured
	struct PowerStatus {
	  double	voltages[16];
	  double	currents[16];
	  boolean	onOff[16];
	  unsigned long	states[16];
	};
	#pragma keylist PowerStatus
	struct RawDisplacement {
	  double	rawPosition[72];
	};
	#pragma keylist RawDisplacement
	struct RawTelemetry {
	  long	dataPacket[720];
	};
	#pragma keylist RawTelemetry
	struct StepVectorUpdate {
	  long	steps[72];
	};
	#pragma keylist StepVectorUpdate
	struct SystemStatus {
	  unsigned long	statusBits[72];
	};
	#pragma keylist SystemStatus
	struct TangentActuatorAbsolutePositionSteps {
	  long	tangentLink_0deg_absolutePositionSteps;
	  long	tangentLink_60deg_absolutePositionSteps;
	  long	tangentLink_120deg_absolutePositionSteps;
	  long	tangentLink_180deg_absolutePositionSteps;
	  long	tangentLink_240deg_absolutePositionSteps;
	  long	tangentLink_300deg_absolutePositionSteps;
	};
	#pragma keylist TangentActuatorAbsolutePositionSteps
	struct TangentActuatorPositionAbsoluteEncoderPositionMeasured {
	  double	tangentLink_0deg_absoluteEncoderPositionMeasured;
	  double	tangentLink_60deg_absoluteEncoderPositionMeasured;
	  double	tangentLink_120deg_absoluteEncoderPositionMeasured;
	  double	tangentLink_180deg_absoluteEncoderPositionMeasured;
	  double	tangentLink_240deg_absoluteEncoderPositionMeasured;
	  double	tangentLink_300deg_absoluteEncoderPositionMeasured;
	};
	#pragma keylist TangentActuatorPositionAbsoluteEncoderPositionMeasured
	struct TangentForcesMeasured {
	  double	tangentLink_0deg_forceMeasured;
	  double	tangentLink_60deg_forceMeasured;
	  double	tangentLink_120deg_forceMeasured;
	  double	tangentLink_180deg_forceMeasured;
	  double	tangentLink_240deg_forceMeasured;
	  double	tangentLink_300deg_forceMeasured;
	};
	#pragma keylist TangentForcesMeasured
	struct TargetForces {
	  double	setPoint[72];
	  double	forceComponent[72];
	};
	#pragma keylist TargetForces
	struct TemperaturesMeasured {
	  double	temps[72];
	  double	intakeTemperatures[4];
	  double	exhaustTemperatures[4];
	};
	#pragma keylist TemperaturesMeasured
	struct ZenithAngleMeasured {
	  double	ZenithAngleMeasured;
	};
	#pragma keylist ZenithAngleMeasured
	struct command_ApplyBendingMode {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  short	bendingModeNbr[32];
	  double	bendingModeValue[32];
	};
	#pragma keylist command_ApplyBendingMode
	struct command_ApplyForce {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	forceSetPoint[72];
	};
	#pragma keylist command_ApplyForce
	struct command_MoveAxialActuator {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  short	axialActuatorID;
	  long	relativeStepsToMove;
	};
	#pragma keylist command_MoveAxialActuator
	struct command_PositionMirror {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	xTilt;
	  double	yTilt;
	  double	piston;
	};
	#pragma keylist command_PositionMirror
	struct command_SetCorrectionMode {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  long	Mode;
	};
	#pragma keylist command_SetCorrectionMode
	struct command_SetValue {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	json_parameters;
	};
	#pragma keylist command_SetValue
	struct command_abort {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_abort
	struct command_disable {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_disable
	struct command_enable {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_enable
	struct command_enterControl {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_enterControl
	struct command_exitControl {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_exitControl
	struct command_standby {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_standby
	struct command_start {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	configuration;
	};
	#pragma keylist command_start
	struct command_stop {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  boolean	state;
	};
	#pragma keylist command_stop
	struct logevent_AppliedSettingsMatchStart {
	  boolean	appliedSettingsMatchStartIsTrue;
	  long	priority;
	};
	#pragma keylist logevent_AppliedSettingsMatchStart
	struct logevent_ErrorCode {
	  long	errorCode;
	  long	priority;
	};
	#pragma keylist logevent_ErrorCode
	struct logevent_M2AssemblyInPosition {
	  boolean	inPosition;
	  long	priority;
	};
	#pragma keylist logevent_M2AssemblyInPosition
	struct logevent_M2DetailedState {
	  short	state;
	  long	priority;
	};
	#pragma keylist logevent_M2DetailedState
	struct logevent_M2FaultState {
	  short	state;
	  long	priority;
	};
	#pragma keylist logevent_M2FaultState
	struct logevent_M2SummaryState {
	  short	state;
	  long	priority;
	};
	#pragma keylist logevent_M2SummaryState
	struct logevent_SettingVersions {
	  string	recommendedSettingVersion;
	  long	priority;
	};
	#pragma keylist logevent_SettingVersions
	struct logevent_SummaryState {
	  long	SummaryStateValue;
	  long	priority;
	};
	#pragma keylist logevent_SummaryState
	struct command
	{
      string<32>	device;
      string<32>	property;
      string<32>	action;
      string<32>	value;
      string<128>	modifiers;
	};
	#pragma keylist command
	struct ackcmd
	{
      long 		ack;
      long 		error;
      string<32>	result;
	};
	#pragma keylist ackcmd
	struct logevent
	{
      string<128>	message;
	};
	#pragma keylist logevent
};

