//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: SALDataDcps.cpp
//  Source: SALDataDcps.idl
//  Generated: Sun May 26 11:41:57 2013
//  OpenSplice V6.3.0
//  
//******************************************************************

#include "SALDataDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < SALData::SALTopic, struct SALTopicSeq_uniq_>;
#endif

const char * SALData::SALTopicTypeSupportInterface::_local_id = "IDL:SALData/SALTopicTypeSupportInterface:1.0";

SALData::SALTopicTypeSupportInterface_ptr SALData::SALTopicTypeSupportInterface::_duplicate (SALData::SALTopicTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean SALData::SALTopicTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, SALData::SALTopicTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

SALData::SALTopicTypeSupportInterface_ptr SALData::SALTopicTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (SALData::SALTopicTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < SALData::SALTopicTypeSupportInterface_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

SALData::SALTopicTypeSupportInterface_ptr SALData::SALTopicTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicTypeSupportInterface_ptr result;
   result = dynamic_cast < SALData::SALTopicTypeSupportInterface_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * SALData::SALTopicDataWriter::_local_id = "IDL:SALData/SALTopicDataWriter:1.0";

SALData::SALTopicDataWriter_ptr SALData::SALTopicDataWriter::_duplicate (SALData::SALTopicDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean SALData::SALTopicDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, SALData::SALTopicDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

SALData::SALTopicDataWriter_ptr SALData::SALTopicDataWriter::_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicDataWriter_ptr result = NULL;
   if (p && p->_is_a (SALData::SALTopicDataWriter::_local_id))
   {
      result = dynamic_cast < SALData::SALTopicDataWriter_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

SALData::SALTopicDataWriter_ptr SALData::SALTopicDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicDataWriter_ptr result;
   result = dynamic_cast < SALData::SALTopicDataWriter_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * SALData::SALTopicDataReader::_local_id = "IDL:SALData/SALTopicDataReader:1.0";

SALData::SALTopicDataReader_ptr SALData::SALTopicDataReader::_duplicate (SALData::SALTopicDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean SALData::SALTopicDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, SALData::SALTopicDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

SALData::SALTopicDataReader_ptr SALData::SALTopicDataReader::_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicDataReader_ptr result = NULL;
   if (p && p->_is_a (SALData::SALTopicDataReader::_local_id))
   {
      result = dynamic_cast < SALData::SALTopicDataReader_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

SALData::SALTopicDataReader_ptr SALData::SALTopicDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicDataReader_ptr result;
   result = dynamic_cast < SALData::SALTopicDataReader_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * SALData::SALTopicDataReaderView::_local_id = "IDL:SALData/SALTopicDataReaderView:1.0";

SALData::SALTopicDataReaderView_ptr SALData::SALTopicDataReaderView::_duplicate (SALData::SALTopicDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean SALData::SALTopicDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, SALData::SALTopicDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

SALData::SALTopicDataReaderView_ptr SALData::SALTopicDataReaderView::_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicDataReaderView_ptr result = NULL;
   if (p && p->_is_a (SALData::SALTopicDataReaderView::_local_id))
   {
      result = dynamic_cast < SALData::SALTopicDataReaderView_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

SALData::SALTopicDataReaderView_ptr SALData::SALTopicDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   SALData::SALTopicDataReaderView_ptr result;
   result = dynamic_cast < SALData::SALTopicDataReaderView_ptr> (p);
   if (result) result->m_count++;
   return result;
}



