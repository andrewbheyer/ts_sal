#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CFG = Release

ifeq ($(CFG), Release)
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -m32 -D_REENTRANT -Wall -I"$(ACE_ROOT)" -I"$(TAO_ROOT)" -I"$(TAO_ROOT)/include" -I"../../../../../include" -I"../../../../../include/sys" -I"../../../../../include/dcps/C++/CCPP" -I"../../../../../include/dcps/C++/CCPP/DDS_OpenFusion_1_6_1" -I"." -I"../../../../../examples/include" -I"../../../../../examples"
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"." -L"$(ACE_ROOT)/lib" -L"../../../../../lib" -Wl,-rpath,\$$ORIGIN -Wl,-rpath,\$$ORIGIN/../../../../../lib
CCC           = $(CXX)
MAKEFILE      = Makefile.ccpp_helloworld_types
DEPENDENCIES  = .depend.$(MAKEFILE)
LTARGETDIR    = ./
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -l"TAO_PortableServer$(LIBSUFFIX)" -l"TAO_AnyTypeCode$(LIBSUFFIX)" -l"TAO$(LIBSUFFIX)" -l"ACE$(LIBSUFFIX)" -l"dcpsccpp" -l"dcpsgapi" -l"ddsuser" -l"ddskernel" -l"ddsserialization" -l"ddsconfparser" -l"ddsconf" -l"ddsdatabase" -l"ddsutil" -l"ddsos" -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) -lpthread
OBJS          = .obj/HelloWorldDataDcpsC$(OBJEXT) .obj/HelloWorldDataDcpsS$(OBJEXT) .obj/HelloWorldDataDcps_impl$(OBJEXT) .obj/HelloWorldDataSplDcps$(OBJEXT) .obj/HelloWorldDataC$(OBJEXT) .obj/HelloWorldDataS$(OBJEXT)
AREXT         = .a
LIB           = $(LTARGETDIR)$(LIBPREFIX)ccpp_helloworld_types$(LIBSUFFIX)$(AREXT)
SOEXT         = .so
SHTARGETDIR   = ./
SHLIB         = $(SHTARGETDIR)$(LIBPREFIX)ccpp_helloworld_types$(LIBSUFFIX)$(SOEXT)
SHFLAGS       = -shared
SRC           = ./HelloWorldDataDcpsC.cpp ./HelloWorldDataDcpsS.cpp ./HelloWorldDataDcps_impl.cpp ./HelloWorldDataSplDcps.cpp HelloWorldDataC.cpp HelloWorldDataS.cpp
LINK.cc       = $(LD) $(LDFLAGS)
DYNAMICFLAGS  = -DOSPL_BUILDEXAMPLE_LIB
STATICFLAGS   = -DACE_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS
EXPORTFLAGS   = $(DYNAMICFLAGS)
endif
ifeq ($(CFG), Debug)
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -m32 -D_REENTRANT -Wall -I"$(ACE_ROOT)" -I"$(TAO_ROOT)" -I"$(TAO_ROOT)/include" -I"../../../../../include" -I"../../../../../include/sys" -I"../../../../../include/dcps/C++/CCPP" -I"../../../../../include/dcps/C++/CCPP/DDS_OpenFusion_1_6_1" -I"." -I"../../../../../examples/include" -I"../../../../../examples"
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"." -L"$(ACE_ROOT)/lib" -L"../../../../../lib" -Wl,-rpath,\$$ORIGIN -Wl,-rpath,\$$ORIGIN/../../../../../lib
CCC           = $(CXX)
MAKEFILE      = Makefile.ccpp_helloworld_types
DEPENDENCIES  = .depend.$(MAKEFILE)
LTARGETDIR    = ./
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -g
LDLIBS        = -l"TAO_PortableServer$(LIBSUFFIX)" -l"TAO_AnyTypeCode$(LIBSUFFIX)" -l"TAO$(LIBSUFFIX)" -l"ACE$(LIBSUFFIX)" -l"dcpsccpp" -l"dcpsgapi" -l"ddsuser" -l"ddskernel" -l"ddsserialization" -l"ddsconfparser" -l"ddsconf" -l"ddsdatabase" -l"ddsutil" -l"ddsos" -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) -lpthread
OBJS          = .obj/HelloWorldDataDcpsC$(OBJEXT) .obj/HelloWorldDataDcpsS$(OBJEXT) .obj/HelloWorldDataDcps_impl$(OBJEXT) .obj/HelloWorldDataSplDcps$(OBJEXT) .obj/HelloWorldDataC$(OBJEXT) .obj/HelloWorldDataS$(OBJEXT)
AREXT         = .a
LIB           = $(LTARGETDIR)$(LIBPREFIX)ccpp_helloworld_types$(LIBSUFFIX)$(AREXT)
SOEXT         = .so
SHTARGETDIR   = ./
SHLIB         = $(SHTARGETDIR)$(LIBPREFIX)ccpp_helloworld_types$(LIBSUFFIX)$(SOEXT)
SHFLAGS       = -shared
SRC           = ./HelloWorldDataDcpsC.cpp ./HelloWorldDataDcpsS.cpp ./HelloWorldDataDcps_impl.cpp ./HelloWorldDataSplDcps.cpp HelloWorldDataC.cpp HelloWorldDataS.cpp
LINK.cc       = $(LD) $(LDFLAGS)
DYNAMICFLAGS  = -DOSPL_BUILDEXAMPLE_LIB
STATICFLAGS   = -DACE_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS
EXPORTFLAGS   = $(DYNAMICFLAGS)
endif

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(SHLIB)

$(SHLIB): $(OBJS)
	@$(TESTDIRSTART) "$(SHTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(SHTARGETDIR)"
	$(LINK.cc) $(SHFLAGS) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

$(LIB): $(OBJS)
	@$(TESTDIRSTART) "$(LTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(LTARGETDIR)"
	$(AR) $(ARFLAGS) $(LIB) $(OBJS) 

SPACE           = $(should_be_unset) $(should_be_unset)
GENERATED_DIRTY = HelloWorldDataDcpsC.inl HelloWorldDataDcpsS.inl HelloWorldDataDcpsC.h HelloWorldDataDcpsS.h HelloWorldDataDcpsC.cpp HelloWorldDataDcpsS.cpp ./HelloWorldDataC.inl ./HelloWorldDataS.inl ./HelloWorldDataC.h ./HelloWorldDataS.h ./HelloWorldDataC.cpp ./HelloWorldDataS.cpp ./HelloWorldDataDcps.idl ./HelloWorldDataSplDcps.h ./HelloWorldDataDcpsC.cpp ./HelloWorldDataDcpsS.cpp ./HelloWorldDataDcps_impl.cpp ./HelloWorldDataSplDcps.cpp ./ccpp_HelloWorldData.h ./HelloWorldDataDcps_impl.h


.NOTPARALLEL:
HelloWorldDataDcpsC.inl HelloWorldDataDcpsS.inl HelloWorldDataDcpsC.h HelloWorldDataDcpsS.h HelloWorldDataDcpsC.cpp HelloWorldDataDcpsS.cpp: HelloWorldDataDcps.idl $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/bin/tao_idl)
	$(ACE_ROOT)/bin/tao_idl -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I $(TAO_ROOT) -I "../../../../../etc/idl" -I ../../idl -Wb,export_macro=OS_EXAMPLE_API -Wb,export_include=../../../../../examples/include/examples_export.h HelloWorldDataDcps.idl


.NOTPARALLEL:
./HelloWorldDataC.inl ./HelloWorldDataS.inl ./HelloWorldDataC.h ./HelloWorldDataS.h ./HelloWorldDataC.cpp ./HelloWorldDataS.cpp: ../../idl/HelloWorldData.idl $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/bin/tao_idl)
	@$(TESTDIRSTART) "." $(TESTDIREND) $(MKDIR) "."
	$(ACE_ROOT)/bin/tao_idl -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I $(TAO_ROOT) -I "../../../../../etc/idl" -I ../../idl -Wb,export_macro=OS_EXAMPLE_API -Wb,export_include=../../../../../examples/include/examples_export.h ../../idl/HelloWorldData.idl


.NOTPARALLEL:
./HelloWorldDataDcps.idl ./HelloWorldDataSplDcps.h ./HelloWorldDataDcpsC.cpp ./HelloWorldDataDcpsS.cpp ./HelloWorldDataDcps_impl.cpp ./HelloWorldDataSplDcps.cpp ./ccpp_HelloWorldData.h ./HelloWorldDataDcps_impl.h: ../../idl/HelloWorldData.idl
	@$(TESTDIRSTART) "." $(TESTDIREND) $(MKDIR) "."
	"../../../../../bin/idlpp" -I "../../../../../etc/idl" -C -l cpp -b CCPP/DDS_OpenFusion_1_6_1 ../../idl/HelloWorldData.idl

.PRECIOUS: $(GENERATED_DIRTY)
$(OBJS): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-:

.obj/HelloWorldDataDcpsC$(OBJEXT): ./HelloWorldDataDcpsC.cpp
	@$(TESTDIRSTART) ".obj/." $(TESTDIREND) $(MKDIR) ".obj/."
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ./HelloWorldDataDcpsC.cpp

.obj/HelloWorldDataDcpsS$(OBJEXT): ./HelloWorldDataDcpsS.cpp
	@$(TESTDIRSTART) ".obj/." $(TESTDIREND) $(MKDIR) ".obj/."
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ./HelloWorldDataDcpsS.cpp

.obj/HelloWorldDataDcps_impl$(OBJEXT): ./HelloWorldDataDcps_impl.cpp
	@$(TESTDIRSTART) ".obj/." $(TESTDIREND) $(MKDIR) ".obj/."
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ./HelloWorldDataDcps_impl.cpp

.obj/HelloWorldDataSplDcps$(OBJEXT): ./HelloWorldDataSplDcps.cpp
	@$(TESTDIRSTART) ".obj/." $(TESTDIREND) $(MKDIR) ".obj/."
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ./HelloWorldDataSplDcps.cpp

.obj/HelloWorldDataC$(OBJEXT): HelloWorldDataC.cpp
	@$(TESTDIRSTART) ".obj/." $(TESTDIREND) $(MKDIR) ".obj/."
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) HelloWorldDataC.cpp

.obj/HelloWorldDataS$(OBJEXT): HelloWorldDataS.cpp
	@$(TESTDIRSTART) ".obj/." $(TESTDIREND) $(MKDIR) ".obj/."
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) HelloWorldDataS.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(SHLIB) $(LIB)
	-$(RM) $(GENERATED_DIRTY)
	-$(RM) .obj/

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@$(TOUCH) $(DEPENDENCIES)

depend:
	-VDIR=.obj/ $(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

include $(DEPENDENCIES)
