//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: SALDataDcps.h
//  Source: SALDataDcps.idl
//  Generated: Mon May 27 11:36:39 2013
//  OpenSplice V6.3.0
//  
//******************************************************************
#ifndef _SALDATADCPS_H_
#define _SALDATADCPS_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "dds_dcps_interfaces.h"
#include "dds_builtinTopics.h"
#include "dds_dcps_builtintopics.h"
#include "SALData.h"

namespace SALData
{
   struct SALTopic;
   struct SALCommand;
   struct SALResponse;
   struct SALEvent;

   class SALTopicTypeSupportInterface;

   typedef SALTopicTypeSupportInterface * SALTopicTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < SALTopicTypeSupportInterface> SALTopicTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < SALTopicTypeSupportInterface> SALTopicTypeSupportInterface_out;


   class SALTopicDataWriter;

   typedef SALTopicDataWriter * SALTopicDataWriter_ptr;
   typedef DDS_DCPSInterface_var < SALTopicDataWriter> SALTopicDataWriter_var;
   typedef DDS_DCPSInterface_out < SALTopicDataWriter> SALTopicDataWriter_out;


   class SALTopicDataReader;

   typedef SALTopicDataReader * SALTopicDataReader_ptr;
   typedef DDS_DCPSInterface_var < SALTopicDataReader> SALTopicDataReader_var;
   typedef DDS_DCPSInterface_out < SALTopicDataReader> SALTopicDataReader_out;


   class SALTopicDataReaderView;

   typedef SALTopicDataReaderView * SALTopicDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < SALTopicDataReaderView> SALTopicDataReaderView_var;
   typedef DDS_DCPSInterface_out < SALTopicDataReaderView> SALTopicDataReaderView_out;


   class SALCommandTypeSupportInterface;

   typedef SALCommandTypeSupportInterface * SALCommandTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < SALCommandTypeSupportInterface> SALCommandTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < SALCommandTypeSupportInterface> SALCommandTypeSupportInterface_out;


   class SALCommandDataWriter;

   typedef SALCommandDataWriter * SALCommandDataWriter_ptr;
   typedef DDS_DCPSInterface_var < SALCommandDataWriter> SALCommandDataWriter_var;
   typedef DDS_DCPSInterface_out < SALCommandDataWriter> SALCommandDataWriter_out;


   class SALCommandDataReader;

   typedef SALCommandDataReader * SALCommandDataReader_ptr;
   typedef DDS_DCPSInterface_var < SALCommandDataReader> SALCommandDataReader_var;
   typedef DDS_DCPSInterface_out < SALCommandDataReader> SALCommandDataReader_out;


   class SALCommandDataReaderView;

   typedef SALCommandDataReaderView * SALCommandDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < SALCommandDataReaderView> SALCommandDataReaderView_var;
   typedef DDS_DCPSInterface_out < SALCommandDataReaderView> SALCommandDataReaderView_out;


   class SALResponseTypeSupportInterface;

   typedef SALResponseTypeSupportInterface * SALResponseTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < SALResponseTypeSupportInterface> SALResponseTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < SALResponseTypeSupportInterface> SALResponseTypeSupportInterface_out;


   class SALResponseDataWriter;

   typedef SALResponseDataWriter * SALResponseDataWriter_ptr;
   typedef DDS_DCPSInterface_var < SALResponseDataWriter> SALResponseDataWriter_var;
   typedef DDS_DCPSInterface_out < SALResponseDataWriter> SALResponseDataWriter_out;


   class SALResponseDataReader;

   typedef SALResponseDataReader * SALResponseDataReader_ptr;
   typedef DDS_DCPSInterface_var < SALResponseDataReader> SALResponseDataReader_var;
   typedef DDS_DCPSInterface_out < SALResponseDataReader> SALResponseDataReader_out;


   class SALResponseDataReaderView;

   typedef SALResponseDataReaderView * SALResponseDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < SALResponseDataReaderView> SALResponseDataReaderView_var;
   typedef DDS_DCPSInterface_out < SALResponseDataReaderView> SALResponseDataReaderView_out;


   class SALEventTypeSupportInterface;

   typedef SALEventTypeSupportInterface * SALEventTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < SALEventTypeSupportInterface> SALEventTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < SALEventTypeSupportInterface> SALEventTypeSupportInterface_out;


   class SALEventDataWriter;

   typedef SALEventDataWriter * SALEventDataWriter_ptr;
   typedef DDS_DCPSInterface_var < SALEventDataWriter> SALEventDataWriter_var;
   typedef DDS_DCPSInterface_out < SALEventDataWriter> SALEventDataWriter_out;


   class SALEventDataReader;

   typedef SALEventDataReader * SALEventDataReader_ptr;
   typedef DDS_DCPSInterface_var < SALEventDataReader> SALEventDataReader_var;
   typedef DDS_DCPSInterface_out < SALEventDataReader> SALEventDataReader_out;


   class SALEventDataReaderView;

   typedef SALEventDataReaderView * SALEventDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < SALEventDataReaderView> SALEventDataReaderView_var;
   typedef DDS_DCPSInterface_out < SALEventDataReaderView> SALEventDataReaderView_out;

   struct SALTopicSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < SALTopic, struct SALTopicSeq_uniq_> SALTopicSeq;
   typedef DDS_DCPSSequence_var < SALTopicSeq> SALTopicSeq_var;
   typedef DDS_DCPSSequence_out < SALTopicSeq> SALTopicSeq_out;
   class SALTopicTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef SALTopicTypeSupportInterface_ptr _ptr_type;
      typedef SALTopicTypeSupportInterface_var _var_type;

      static SALTopicTypeSupportInterface_ptr _duplicate (SALTopicTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALTopicTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static SALTopicTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALTopicTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      SALTopicTypeSupportInterface_ptr _this () { return this; }


   protected:
      SALTopicTypeSupportInterface () {};
      ~SALTopicTypeSupportInterface () {};
   private:
      SALTopicTypeSupportInterface (const SALTopicTypeSupportInterface &);
      SALTopicTypeSupportInterface & operator = (const SALTopicTypeSupportInterface &);
   };

   class SALTopicDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef SALTopicDataWriter_ptr _ptr_type;
      typedef SALTopicDataWriter_var _var_type;

      static SALTopicDataWriter_ptr _duplicate (SALTopicDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALTopicDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static SALTopicDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALTopicDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      SALTopicDataWriter_ptr _this () { return this; }

      virtual DDS::InstanceHandle_t register_instance (const SALTopic& instance_data) = 0;
      virtual DDS::InstanceHandle_t register_instance_w_timestamp (const SALTopic& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t unregister_instance (const SALTopic& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const SALTopic& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t write (const SALTopic& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t write_w_timestamp (const SALTopic& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t dispose (const SALTopic& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t dispose_w_timestamp (const SALTopic& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t writedispose (const SALTopic& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t writedispose_w_timestamp (const SALTopic& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALTopic& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALTopic& instance_data) = 0;

   protected:
      SALTopicDataWriter () {};
      ~SALTopicDataWriter () {};
   private:
      SALTopicDataWriter (const SALTopicDataWriter &);
      SALTopicDataWriter & operator = (const SALTopicDataWriter &);
   };

   class SALTopicDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef SALTopicDataReader_ptr _ptr_type;
      typedef SALTopicDataReader_var _var_type;

      static SALTopicDataReader_ptr _duplicate (SALTopicDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALTopicDataReader_ptr _narrow (DDS::Object_ptr obj);
      static SALTopicDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALTopicDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      SALTopicDataReader_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALTopic& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALTopic& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALTopic& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALTopic& instance) = 0;

   protected:
      SALTopicDataReader () {};
      ~SALTopicDataReader () {};
   private:
      SALTopicDataReader (const SALTopicDataReader &);
      SALTopicDataReader & operator = (const SALTopicDataReader &);
   };

   class SALTopicDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef SALTopicDataReaderView_ptr _ptr_type;
      typedef SALTopicDataReaderView_var _var_type;

      static SALTopicDataReaderView_ptr _duplicate (SALTopicDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALTopicDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static SALTopicDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALTopicDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      SALTopicDataReaderView_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALTopic& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALTopic& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALTopicSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALTopic& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALTopic& instance) = 0;

   protected:
      SALTopicDataReaderView () {};
      ~SALTopicDataReaderView () {};
   private:
      SALTopicDataReaderView (const SALTopicDataReaderView &);
      SALTopicDataReaderView & operator = (const SALTopicDataReaderView &);
   };

   struct SALCommandSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < SALCommand, struct SALCommandSeq_uniq_> SALCommandSeq;
   typedef DDS_DCPSSequence_var < SALCommandSeq> SALCommandSeq_var;
   typedef DDS_DCPSSequence_out < SALCommandSeq> SALCommandSeq_out;
   class SALCommandTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef SALCommandTypeSupportInterface_ptr _ptr_type;
      typedef SALCommandTypeSupportInterface_var _var_type;

      static SALCommandTypeSupportInterface_ptr _duplicate (SALCommandTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALCommandTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static SALCommandTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALCommandTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      SALCommandTypeSupportInterface_ptr _this () { return this; }


   protected:
      SALCommandTypeSupportInterface () {};
      ~SALCommandTypeSupportInterface () {};
   private:
      SALCommandTypeSupportInterface (const SALCommandTypeSupportInterface &);
      SALCommandTypeSupportInterface & operator = (const SALCommandTypeSupportInterface &);
   };

   class SALCommandDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef SALCommandDataWriter_ptr _ptr_type;
      typedef SALCommandDataWriter_var _var_type;

      static SALCommandDataWriter_ptr _duplicate (SALCommandDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALCommandDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static SALCommandDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALCommandDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      SALCommandDataWriter_ptr _this () { return this; }

      virtual DDS::InstanceHandle_t register_instance (const SALCommand& instance_data) = 0;
      virtual DDS::InstanceHandle_t register_instance_w_timestamp (const SALCommand& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t unregister_instance (const SALCommand& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const SALCommand& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t write (const SALCommand& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t write_w_timestamp (const SALCommand& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t dispose (const SALCommand& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t dispose_w_timestamp (const SALCommand& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t writedispose (const SALCommand& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t writedispose_w_timestamp (const SALCommand& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALCommand& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALCommand& instance_data) = 0;

   protected:
      SALCommandDataWriter () {};
      ~SALCommandDataWriter () {};
   private:
      SALCommandDataWriter (const SALCommandDataWriter &);
      SALCommandDataWriter & operator = (const SALCommandDataWriter &);
   };

   class SALCommandDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef SALCommandDataReader_ptr _ptr_type;
      typedef SALCommandDataReader_var _var_type;

      static SALCommandDataReader_ptr _duplicate (SALCommandDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALCommandDataReader_ptr _narrow (DDS::Object_ptr obj);
      static SALCommandDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALCommandDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      SALCommandDataReader_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALCommand& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALCommand& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALCommand& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALCommand& instance) = 0;

   protected:
      SALCommandDataReader () {};
      ~SALCommandDataReader () {};
   private:
      SALCommandDataReader (const SALCommandDataReader &);
      SALCommandDataReader & operator = (const SALCommandDataReader &);
   };

   class SALCommandDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef SALCommandDataReaderView_ptr _ptr_type;
      typedef SALCommandDataReaderView_var _var_type;

      static SALCommandDataReaderView_ptr _duplicate (SALCommandDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALCommandDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static SALCommandDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALCommandDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      SALCommandDataReaderView_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALCommand& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALCommand& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALCommandSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALCommand& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALCommand& instance) = 0;

   protected:
      SALCommandDataReaderView () {};
      ~SALCommandDataReaderView () {};
   private:
      SALCommandDataReaderView (const SALCommandDataReaderView &);
      SALCommandDataReaderView & operator = (const SALCommandDataReaderView &);
   };

   struct SALResponseSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < SALResponse, struct SALResponseSeq_uniq_> SALResponseSeq;
   typedef DDS_DCPSSequence_var < SALResponseSeq> SALResponseSeq_var;
   typedef DDS_DCPSSequence_out < SALResponseSeq> SALResponseSeq_out;
   class SALResponseTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef SALResponseTypeSupportInterface_ptr _ptr_type;
      typedef SALResponseTypeSupportInterface_var _var_type;

      static SALResponseTypeSupportInterface_ptr _duplicate (SALResponseTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALResponseTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static SALResponseTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALResponseTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      SALResponseTypeSupportInterface_ptr _this () { return this; }


   protected:
      SALResponseTypeSupportInterface () {};
      ~SALResponseTypeSupportInterface () {};
   private:
      SALResponseTypeSupportInterface (const SALResponseTypeSupportInterface &);
      SALResponseTypeSupportInterface & operator = (const SALResponseTypeSupportInterface &);
   };

   class SALResponseDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef SALResponseDataWriter_ptr _ptr_type;
      typedef SALResponseDataWriter_var _var_type;

      static SALResponseDataWriter_ptr _duplicate (SALResponseDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALResponseDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static SALResponseDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALResponseDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      SALResponseDataWriter_ptr _this () { return this; }

      virtual DDS::InstanceHandle_t register_instance (const SALResponse& instance_data) = 0;
      virtual DDS::InstanceHandle_t register_instance_w_timestamp (const SALResponse& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t unregister_instance (const SALResponse& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const SALResponse& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t write (const SALResponse& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t write_w_timestamp (const SALResponse& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t dispose (const SALResponse& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t dispose_w_timestamp (const SALResponse& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t writedispose (const SALResponse& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t writedispose_w_timestamp (const SALResponse& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALResponse& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALResponse& instance_data) = 0;

   protected:
      SALResponseDataWriter () {};
      ~SALResponseDataWriter () {};
   private:
      SALResponseDataWriter (const SALResponseDataWriter &);
      SALResponseDataWriter & operator = (const SALResponseDataWriter &);
   };

   class SALResponseDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef SALResponseDataReader_ptr _ptr_type;
      typedef SALResponseDataReader_var _var_type;

      static SALResponseDataReader_ptr _duplicate (SALResponseDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALResponseDataReader_ptr _narrow (DDS::Object_ptr obj);
      static SALResponseDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALResponseDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      SALResponseDataReader_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALResponse& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALResponse& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALResponse& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALResponse& instance) = 0;

   protected:
      SALResponseDataReader () {};
      ~SALResponseDataReader () {};
   private:
      SALResponseDataReader (const SALResponseDataReader &);
      SALResponseDataReader & operator = (const SALResponseDataReader &);
   };

   class SALResponseDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef SALResponseDataReaderView_ptr _ptr_type;
      typedef SALResponseDataReaderView_var _var_type;

      static SALResponseDataReaderView_ptr _duplicate (SALResponseDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALResponseDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static SALResponseDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALResponseDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      SALResponseDataReaderView_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALResponse& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALResponse& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALResponseSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALResponse& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALResponse& instance) = 0;

   protected:
      SALResponseDataReaderView () {};
      ~SALResponseDataReaderView () {};
   private:
      SALResponseDataReaderView (const SALResponseDataReaderView &);
      SALResponseDataReaderView & operator = (const SALResponseDataReaderView &);
   };

   struct SALEventSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < SALEvent, struct SALEventSeq_uniq_> SALEventSeq;
   typedef DDS_DCPSSequence_var < SALEventSeq> SALEventSeq_var;
   typedef DDS_DCPSSequence_out < SALEventSeq> SALEventSeq_out;
   class SALEventTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef SALEventTypeSupportInterface_ptr _ptr_type;
      typedef SALEventTypeSupportInterface_var _var_type;

      static SALEventTypeSupportInterface_ptr _duplicate (SALEventTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALEventTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static SALEventTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALEventTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      SALEventTypeSupportInterface_ptr _this () { return this; }


   protected:
      SALEventTypeSupportInterface () {};
      ~SALEventTypeSupportInterface () {};
   private:
      SALEventTypeSupportInterface (const SALEventTypeSupportInterface &);
      SALEventTypeSupportInterface & operator = (const SALEventTypeSupportInterface &);
   };

   class SALEventDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef SALEventDataWriter_ptr _ptr_type;
      typedef SALEventDataWriter_var _var_type;

      static SALEventDataWriter_ptr _duplicate (SALEventDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALEventDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static SALEventDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALEventDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      SALEventDataWriter_ptr _this () { return this; }

      virtual DDS::InstanceHandle_t register_instance (const SALEvent& instance_data) = 0;
      virtual DDS::InstanceHandle_t register_instance_w_timestamp (const SALEvent& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t unregister_instance (const SALEvent& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const SALEvent& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t write (const SALEvent& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t write_w_timestamp (const SALEvent& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t dispose (const SALEvent& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t dispose_w_timestamp (const SALEvent& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t writedispose (const SALEvent& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t writedispose_w_timestamp (const SALEvent& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALEvent& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALEvent& instance_data) = 0;

   protected:
      SALEventDataWriter () {};
      ~SALEventDataWriter () {};
   private:
      SALEventDataWriter (const SALEventDataWriter &);
      SALEventDataWriter & operator = (const SALEventDataWriter &);
   };

   class SALEventDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef SALEventDataReader_ptr _ptr_type;
      typedef SALEventDataReader_var _var_type;

      static SALEventDataReader_ptr _duplicate (SALEventDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALEventDataReader_ptr _narrow (DDS::Object_ptr obj);
      static SALEventDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALEventDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      SALEventDataReader_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALEvent& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALEvent& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALEvent& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALEvent& instance) = 0;

   protected:
      SALEventDataReader () {};
      ~SALEventDataReader () {};
   private:
      SALEventDataReader (const SALEventDataReader &);
      SALEventDataReader & operator = (const SALEventDataReader &);
   };

   class SALEventDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef SALEventDataReaderView_ptr _ptr_type;
      typedef SALEventDataReaderView_var _var_type;

      static SALEventDataReaderView_ptr _duplicate (SALEventDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static SALEventDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static SALEventDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static SALEventDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      SALEventDataReaderView_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (SALEvent& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (SALEvent& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (SALEventSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (SALEvent& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const SALEvent& instance) = 0;

   protected:
      SALEventDataReaderView () {};
      ~SALEventDataReaderView () {};
   private:
      SALEventDataReaderView (const SALEventDataReaderView &);
      SALEventDataReaderView & operator = (const SALEventDataReaderView &);
   };

}
template <>
DDS::BuiltinTopicKey_t_slice* DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::copy (DDS::BuiltinTopicKey_t_slice *to, const DDS::BuiltinTopicKey_t_slice* from);
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::free (DDS::BuiltinTopicKey_t_slice *ptr);




#endif 
