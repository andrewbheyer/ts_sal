OpenSplice DDS Camel Component
------------------------------

Pre-requisites:-

Java SDK 6.
Apache Maven 2.0.9 or greater*
OpenSpliceDDS 4.3 or greater**

Optional software:-

Eclipse: 3.4 (eclipse-java-ganymede-SR2-win32.zip)
Additional Eclipse Plugins using Eclipse Update mechanism:
Eclipse Maven Plugin Update Site:
    http://m2eclipse.sonatype.org/update/
    (Select Maven Integration Components only)

*The processes described below have been tested against Apache Maven 2.0.10.
** The OpenSplice DDS Camel Component has been tested against versions of OpenSplice DDS from 4.3 to 5.3.

Environment configuration
-------------------------

Set up the OpenSplice environment by running the release.com script that resides within the OpenSplice installation.

Maven requires that the JAVA_HOME variable is set to point to the JDK installation directory.

Build the components
--------------------

Before the camel-dds component can be built it is first necessary to build the opensplice-idl-plugin for Apache Maven. This component allows Maven to access the OpenSplice idl pre-processor (idlpp) and compile idl into the required Java files for compilation.

Change directory to maven-dds/plugins/opensplice-idl-plugin, found within the camelopensplice directory and run:-

$ mvn install

Maven will download and install jars within its own repository. The default location for the repository is within a .m2 directory within the user's home. The opensplice-idl-plugin will build successfully and will also be installed into the Maven repository.

The camel-dds component requires the Maven repository to contain the OpenSplice dcpssaj.jar, so this needs to be installed before the component can be built. To do this run:-

$ mvn install:install-file -Dfile=$OSPL_HOME/jar/dcpssaj.jar -DgroupId=org.opensplice.dds -DartifactId=dcpssaj -Dversion=1.0-LATEST -Dpackaging=jar

On windows replace $OSPL_HOME/jar/dcpssaj.jar with %OSPL_HOME%\jar\dcpssaj.jar.

Note that we install the dcpssaj jar as version 1.0-LATEST rather than a version number specific to the OpenSplice installation. This is so that the Camel component can be run with multiple versions of OpenSplice without the need for multiple branches of the code base that define different project dependencies.

This command will also force Maven to download some dependencies. Now we may build the camel-dds component. The camel-dds components require the use of the OpenSplice daemon, so this needs to be started by running:-

$ ospl start

Once the daemon has been started change directory to camel-dds/components/camel-dds and run:-

$ mvn install

There are four examples included in the repository. You can find these in the camel-dds/examples directory. Each example includes its own README file which contains details of how to compile and run the example.

Change log
----------

5 October 2010:- 
Updated OpenSplice DDS Camel Component to use Camel 2.4.0, all components and examples versioned as 0.2-SNAPSHOT as a result.
Removed Checkstyle reliance for component build, should reinstate at some point in the future, but build errors prevented progress.
Removed one QoSSettingTest test cases as it was invalid.
Tidied code a little.
