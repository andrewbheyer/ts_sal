Camel DDS to JMS Demo
---------------------
This demonstrates a translation of a DDS message to a JMS message using a Bean. The demo is based on the simple DDSChatDemo, but the ChatMessage objects are translated into JSON strings and then sent on to ActiveMQ Endpoints where they are printed to the console.

It is necessary to translate a DDS entity before passing it on to a JMS system. This is because the classes generated for a DDS Topic object are not serializable, so there is no way to directly wrap them within a JMS message. Camel's diversity allows us to introduce a Bean class in the route which will translate the object to a format which can be wrapped in a JMS message.

Compilation
-----------
From the camel-dds-jms-demo directory enter the following command: 

$ mvn install

Running the demo
----------------
Start the OpenSplice daemon. From the camel-dds-jms-demo directory run the following command:

$ mvn exec:java -Dexec.mainClass=camel.dds.demo.DDSJMSDemo -Dexec.args="user1"

In another command prompt and enter the following command:

$ mvn exec:java -Dexec.mainClass=camel.dds.demo.DDSJMSDemo -Dexec.args="user2"

Type a message on the terminal and press <ENTER>. The message will be routed through JMS appear in the other terminal AND the current terminal. This is because the JMS endpoint does not have a filter associated with it to filter out messages sent from the current user. The JMS components display all messages received on the JMS endpoint.

Exiting the demo
-----------------
Type quit and press <ENTER>