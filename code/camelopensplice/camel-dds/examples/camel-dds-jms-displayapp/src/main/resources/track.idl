/*
 *  RESTful DDS is a prototyping effort to demonstrate how DDS could be combined
 *  with HTTP clients, extending the realm of pub/sub distribution to true wide
 *  area networking.
 *
 *  Copyright (C) 2009 PrismTech Ltd.
 *  reinier.torenbeek@gmail.com
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License Version 3 dated 29 June 2007, as published by the
 *  Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with restful-dds; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

module track
{
   typedef long TrackId_type;

   typedef string Padding_type;
   
   typedef struct Pos
   {
      float distance;
      float direction;
      float angle;
   } Position_type;

   typedef enum Classification_enum
   {
      TRACK_CLASSIFICATION_UNKNOWN,
      TRACK_CLASSIFICATION_HOSTILE,
      TRACK_CLASSIFICATION_FRIENDLY,
      TRACK_CLASSIFICATION_UNIDENTIFIED,
      TRACK_CLASSIFICATION_ALL,
	  TRACK_CLASSIFICATION_DESTROYED
      
   } Classification_type;

   struct ObjectLocation
   {
      TrackId_type trackId;
      long x;
      long y;
      long z;
      Padding_type padding;
   };
#pragma keylist ObjectLocation trackId
   
   struct PointTrack
   {
      TrackId_type trackId;
      Position_type position;
      Padding_type padding;
   };
#pragma keylist PointTrack trackId
   
   struct TrackState
   {
      TrackId_type trackId;
      Classification_type classification;
      Padding_type padding;
   };
#pragma keylist TrackState trackId
};
