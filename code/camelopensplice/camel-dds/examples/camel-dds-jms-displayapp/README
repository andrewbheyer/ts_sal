Camel DDS to JMS DisplayApp Demo
--------------------------------
This demonstrates a translation of a DDS message to a JMS message using a Bean. The demo is based on the Battleship demo, which forms a part of the OpenSplice DDS PowerTools. The Battleship demo is also available as part of another project, the RESTfulDDS which can be obtained as a binary download from http://code.google.com/p/restful-dds. The demo consists of three parts.

1. The DisplayApp, which reads from ActiveMQ Endpoints (topics) for each type of data object dealt with within the Battleship demo, these being ObjectLocation, PointTrack and TrackState.

2. The DDStoJMSServer, which reads from the DDS topics and translates the data objects into JSON strings and then sends these on to ActiveMQ Endpoints (topics).

3. The CamelJMSExample, which simply reads from the ObjectLocation topic and prints the information out to the console.

It is necessary to translate a DDS entity before passing it on to a JMS system. This is because the classes generated for a DDS Topic object are not serializable, so there is no way to directly wrap them within a JMS message. Camel's diversity allows us to introduce a Bean class in the route which will translate the object to a format which can be wrapped in a JMS message.

Compliation
-----------
From the camel-dds-jms-displayapp directory enter the following command: 

$ mvn install

Running
-------
Start the OpenSplice daemon. From the camel-dds-jms-displayapp directory run the following command:-

$ mvn exec:java -Dexec.mainClass=camel.dds.examples.camel_dds_jms_displayapp.DDStoJMSServer

This is the server that will translate the DDS entities to JMS messages.

In another command prompt enter the following command:-

$ mvn exec:java -Dexec.mainClass=camel.dds.examples.camel_dds_jms_displayapp.DisplayApp

Then start the Battleship demo classes and start them to send data.

The simple jms consumer can be used to show the actual messsage structure that is sent over the object location JMS topic. This is included, but the demo will work without it.

$ mvn exec:java -Dexec.mainClass=camel.dds.examples.camel_dds_jms_displayapp.CamelJmsExample

Exiting the demo
-----------------
Type quit in the DDStoJMSServer window and press <ENTER>. Press the Exit button in the DisplayApp window.
