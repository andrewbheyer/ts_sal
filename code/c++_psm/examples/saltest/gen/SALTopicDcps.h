//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: SALTopicDcps.h
//  Source: gen/SALTopicDcps.idl
//  Generated: Mon May 20 09:57:46 2013
//  OpenSplice V6.3.0
//  
//******************************************************************
#ifndef _SALTOPICDCPS_H_
#define _SALTOPICDCPS_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "dds_dcps_interfaces.h"
#include "SALTopic.h"
#include "dds_builtinTopics.h"
#include "dds_dcps_builtintopics.h"

namespace org
{
   namespace lsst
   {
      namespace sal
      {
         struct SALTopicType;

         class SALTopicTypeTypeSupportInterface;

         typedef SALTopicTypeTypeSupportInterface * SALTopicTypeTypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < SALTopicTypeTypeSupportInterface> SALTopicTypeTypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < SALTopicTypeTypeSupportInterface> SALTopicTypeTypeSupportInterface_out;


         class SALTopicTypeDataWriter;

         typedef SALTopicTypeDataWriter * SALTopicTypeDataWriter_ptr;
         typedef DDS_DCPSInterface_var < SALTopicTypeDataWriter> SALTopicTypeDataWriter_var;
         typedef DDS_DCPSInterface_out < SALTopicTypeDataWriter> SALTopicTypeDataWriter_out;


         class SALTopicTypeDataReader;

         typedef SALTopicTypeDataReader * SALTopicTypeDataReader_ptr;
         typedef DDS_DCPSInterface_var < SALTopicTypeDataReader> SALTopicTypeDataReader_var;
         typedef DDS_DCPSInterface_out < SALTopicTypeDataReader> SALTopicTypeDataReader_out;


         class SALTopicTypeDataReaderView;

         typedef SALTopicTypeDataReaderView * SALTopicTypeDataReaderView_ptr;
         typedef DDS_DCPSInterface_var < SALTopicTypeDataReaderView> SALTopicTypeDataReaderView_var;
         typedef DDS_DCPSInterface_out < SALTopicTypeDataReaderView> SALTopicTypeDataReaderView_out;

         struct SALTopicTypeSeq_uniq_ {};
         typedef DDS_DCPSUVLSeq < SALTopicType, struct SALTopicTypeSeq_uniq_> SALTopicTypeSeq;
         typedef DDS_DCPSSequence_var < SALTopicTypeSeq> SALTopicTypeSeq_var;
         typedef DDS_DCPSSequence_out < SALTopicTypeSeq> SALTopicTypeSeq_out;
         class SALTopicTypeTypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef SALTopicTypeTypeSupportInterface_ptr _ptr_type;
            typedef SALTopicTypeTypeSupportInterface_var _var_type;

            static SALTopicTypeTypeSupportInterface_ptr _duplicate (SALTopicTypeTypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SALTopicTypeTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static SALTopicTypeTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SALTopicTypeTypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            SALTopicTypeTypeSupportInterface_ptr _this () { return this; }


         protected:
            SALTopicTypeTypeSupportInterface () {};
            ~SALTopicTypeTypeSupportInterface () {};
         private:
            SALTopicTypeTypeSupportInterface (const SALTopicTypeTypeSupportInterface &);
            SALTopicTypeTypeSupportInterface & operator = (const SALTopicTypeTypeSupportInterface &);
         };

         class SALTopicTypeDataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef SALTopicTypeDataWriter_ptr _ptr_type;
            typedef SALTopicTypeDataWriter_var _var_type;

            static SALTopicTypeDataWriter_ptr _duplicate (SALTopicTypeDataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SALTopicTypeDataWriter_ptr _narrow (DDS::Object_ptr obj);
            static SALTopicTypeDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SALTopicTypeDataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            SALTopicTypeDataWriter_ptr _this () { return this; }

            virtual DDS::InstanceHandle_t register_instance (const SALTopicType& instance_data) = 0;
            virtual DDS::InstanceHandle_t register_instance_w_timestamp (const SALTopicType& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::ReturnCode_t unregister_instance (const SALTopicType& instance_data, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const SALTopicType& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::ReturnCode_t write (const SALTopicType& instance_data, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::ReturnCode_t write_w_timestamp (const SALTopicType& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::ReturnCode_t dispose (const SALTopicType& instance_data, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::ReturnCode_t dispose_w_timestamp (const SALTopicType& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::ReturnCode_t writedispose (const SALTopicType& instance_data, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::ReturnCode_t writedispose_w_timestamp (const SALTopicType& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::ReturnCode_t get_key_value (SALTopicType& key_holder, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::InstanceHandle_t lookup_instance (const SALTopicType& instance_data) = 0;

         protected:
            SALTopicTypeDataWriter () {};
            ~SALTopicTypeDataWriter () {};
         private:
            SALTopicTypeDataWriter (const SALTopicTypeDataWriter &);
            SALTopicTypeDataWriter & operator = (const SALTopicTypeDataWriter &);
         };

         class SALTopicTypeDataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef SALTopicTypeDataReader_ptr _ptr_type;
            typedef SALTopicTypeDataReader_var _var_type;

            static SALTopicTypeDataReader_ptr _duplicate (SALTopicTypeDataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SALTopicTypeDataReader_ptr _narrow (DDS::Object_ptr obj);
            static SALTopicTypeDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SALTopicTypeDataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            SALTopicTypeDataReader_ptr _this () { return this; }

            virtual DDS::ReturnCode_t read (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t take (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t read_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t take_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t read_next_sample (SALTopicType& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::ReturnCode_t take_next_sample (SALTopicType& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::ReturnCode_t read_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t take_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t read_next_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t take_next_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t read_next_instance_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t take_next_instance_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t return_loan (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::ReturnCode_t get_key_value (SALTopicType& key_holder, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::InstanceHandle_t lookup_instance (const SALTopicType& instance) = 0;

         protected:
            SALTopicTypeDataReader () {};
            ~SALTopicTypeDataReader () {};
         private:
            SALTopicTypeDataReader (const SALTopicTypeDataReader &);
            SALTopicTypeDataReader & operator = (const SALTopicTypeDataReader &);
         };

         class SALTopicTypeDataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef SALTopicTypeDataReaderView_ptr _ptr_type;
            typedef SALTopicTypeDataReaderView_var _var_type;

            static SALTopicTypeDataReaderView_ptr _duplicate (SALTopicTypeDataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SALTopicTypeDataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static SALTopicTypeDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SALTopicTypeDataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            SALTopicTypeDataReaderView_ptr _this () { return this; }

            virtual DDS::ReturnCode_t read (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t take (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t read_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t take_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t read_next_sample (SALTopicType& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::ReturnCode_t take_next_sample (SALTopicType& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::ReturnCode_t read_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t take_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t read_next_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t take_next_instance (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
            virtual DDS::ReturnCode_t read_next_instance_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t take_next_instance_w_condition (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::ReturnCode_t return_loan (SALTopicTypeSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::ReturnCode_t get_key_value (SALTopicType& key_holder, DDS::InstanceHandle_t handle) = 0;
            virtual DDS::InstanceHandle_t lookup_instance (const SALTopicType& instance) = 0;

         protected:
            SALTopicTypeDataReaderView () {};
            ~SALTopicTypeDataReaderView () {};
         private:
            SALTopicTypeDataReaderView (const SALTopicTypeDataReaderView &);
            SALTopicTypeDataReaderView & operator = (const SALTopicTypeDataReaderView &);
         };

      }
   }
}
template <>
DDS::BuiltinTopicKey_t_slice* DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::copy (DDS::BuiltinTopicKey_t_slice *to, const DDS::BuiltinTopicKey_t_slice* from);
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::free (DDS::BuiltinTopicKey_t_slice *ptr);




#endif 
