
	svcRTN salm2_Application::getItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_m2_Application_Status_1 :
                      strncpy(value, data.Status_1, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_10 :
                      strncpy(value, data.Status_10, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_11 :
                      strncpy(value, data.Status_11, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_12 :
                      strncpy(value, data.Status_12, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_13 :
                      strncpy(value, data.Status_13, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_14 :
                      strncpy(value, data.Status_14, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_15 :
                      strncpy(value, data.Status_15, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_2 :
                      strncpy(value, data.Status_2, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_3 :
                      strncpy(value, data.Status_3, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_4 :
                      strncpy(value, data.Status_4, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_5 :
                      strncpy(value, data.Status_5, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_6 :
                      strncpy(value, data.Status_6, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_7 :
                      strncpy(value, data.Status_7, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_8 :
                      strncpy(value, data.Status_8, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_9 :
                      strncpy(value, data.Status_9, 128);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


	svcRTN salm2_Application::setItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_m2_Application_Status_1 :
                      strncpy(data.Status_1, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_10 :
                      strncpy(data.Status_10, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_11 :
                      strncpy(data.Status_11, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_12 :
                      strncpy(data.Status_12, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_13 :
                      strncpy(data.Status_13, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_14 :
                      strncpy(data.Status_14, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_15 :
                      strncpy(data.Status_15, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_2 :
                      strncpy(data.Status_2, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_3 :
                      strncpy(data.Status_3, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_4 :
                      strncpy(data.Status_4, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_5 :
                      strncpy(data.Status_5, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_6 :
                      strncpy(data.Status_6, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_7 :
                      strncpy(data.Status_7, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_8 :
                      strncpy(data.Status_8, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_m2_Application_Status_9 :
                      strncpy(data.Status_9, value, 128);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


       svcRTN salm2_Application::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salm2_Application::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

	svcRTN salm2_Application::getItem ( svcIID itemId , svcFLT &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_m2_Application_Demand :
                      if { size > 3 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Demand[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_m2_Application_Error :
                      if { size > 3 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Error[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_m2_Application_Position :
                      if { size > 3 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Position[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salm2_Application::setItem ( svcIID itemId , svcFLT &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_m2_Application_Demand :
                      if { size > 3 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Demand[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_m2_Application_Error :
                      if { size > 3 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Error[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_m2_Application_Position :
                      if { size > 3 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Position[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salm2_Application::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salm2_Application::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}
