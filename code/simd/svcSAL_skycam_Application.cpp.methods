
	svcRTN salskycam_Application::getItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_skycam_Application_Catalog :
                      strncpy(value, data.Catalog, 4096);
                      result = SAL__OK;
                      break;


                 case SAL_IID_skycam_Application_Status :
                      strncpy(value, data.Status, 16);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


	svcRTN salskycam_Application::setItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_skycam_Application_Catalog :
                      strncpy(data.Catalog, value, 4096);
                      result = SAL__OK;
                      break;


                 case SAL_IID_skycam_Application_Status :
                      strncpy(data.Status, value, 16);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


       svcRTN salskycam_Application::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salskycam_Application::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

	svcRTN salskycam_Application::getItem ( svcIID itemId , svcFLOAT &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_skycam_Application_Data :
                      if { size > 65 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Data[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_skycam_Application_Error :
                      if { size > 5 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Error[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_skycam_Application_Sky_parms :
                      if { size > 33 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Sky_parms[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salskycam_Application::setItem ( svcIID itemId , svcFLOAT &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_skycam_Application_Data :
                      if { size > 65 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Data[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_skycam_Application_Error :
                      if { size > 5 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Error[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_skycam_Application_Sky_parms :
                      if { size > 33 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Sky_parms[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salskycam_Application::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salskycam_Application::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}
