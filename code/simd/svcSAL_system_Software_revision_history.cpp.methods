
	svcRTN salsystem_Software_revision_history::getItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_system_Software_revision_history_Notes :
                      strncpy(value, data.Notes, 32);
                      result = SAL__OK;
                      break;


                 case SAL_IID_system_Software_revision_history_PackageName :
                      strncpy(value, data.PackageName, 32);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


	svcRTN salsystem_Software_revision_history::setItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_system_Software_revision_history_Notes :
                      strncpy(data.Notes, value, 32);
                      result = SAL__OK;
                      break;


                 case SAL_IID_system_Software_revision_history_PackageName :
                      strncpy(data.PackageName, value, 32);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


       svcRTN salsystem_Software_revision_history::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salsystem_Software_revision_history::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

	svcRTN salsystem_Software_revision_history::getItem ( svcIID itemId , svcLONG &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_system_Software_revision_history_Version :
                      if { size > 4 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.Version[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salsystem_Software_revision_history::setItem ( svcIID itemId , svcLONG &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_system_Software_revision_history_Version :
                      if { size > 4 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.Version[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salsystem_Software_revision_history::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salsystem_Software_revision_history::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}
