
	svcRTN salcamera_BEE_biases::getItem ( svcIID itemId , svcLONG &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_BEE_biases_operate :
                      if { size > 202 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.operate[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_BEE_biases_reset :
                      if { size > 202 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.reset[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_BEE_biases_substrate :
                      if { size > 202 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.substrate[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salcamera_BEE_biases::setItem ( svcIID itemId , svcLONG &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_BEE_biases_operate :
                      if { size > 202 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.operate[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_BEE_biases_reset :
                      if { size > 202 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.reset[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_BEE_biases_substrate :
                      if { size > 202 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.substrate[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_BEE_biases::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salcamera_BEE_biases::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}
