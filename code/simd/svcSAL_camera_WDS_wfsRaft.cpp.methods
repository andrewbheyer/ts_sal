
	svcRTN salcamera_WDS_wfsRaft::getItem ( svcIID itemId , svcULONG &value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      value = data.status;
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}
	


	svcRTN salcamera_WDS_wfsRaft::setItem ( svcIID itemId , svcULONG &value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      data.status = value;
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}
	


       svcRTN salcamera_WDS_wfsRaft::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      sscanf(textValue,"%ld",&data.status);
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_WDS_wfsRaft::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      sprintf(textValue,"%ld",data.status);
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

	svcRTN salcamera_WDS_wfsRaft::getItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_camera_WDS_wfsRaft_CalcImage1 :
                      strncpy(value, data.CalcImage1, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_camera_WDS_wfsRaft_CalcImage2 :
                      strncpy(value, data.CalcImage2, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_camera_WDS_wfsRaft_avgInsideImage :
                      strncpy(value, data.avgInsideImage, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_camera_WDS_wfsRaft_avgOutsideImage :
                      strncpy(value, data.avgOutsideImage, 128);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


	svcRTN salcamera_WDS_wfsRaft::setItem ( svcIID itemId , (svcCHAR *)value )
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {
	    


                 case SAL_IID_camera_WDS_wfsRaft_CalcImage1 :
                      strncpy(data.CalcImage1, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_camera_WDS_wfsRaft_CalcImage2 :
                      strncpy(data.CalcImage2, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_camera_WDS_wfsRaft_avgInsideImage :
                      strncpy(data.avgInsideImage, value, 128);
                      result = SAL__OK;
                      break;


                 case SAL_IID_camera_WDS_wfsRaft_avgOutsideImage :
                      strncpy(data.avgOutsideImage, value, 128);
                      result = SAL__OK;
                      break;


	    }
	    return result;
	}
	


       svcRTN salcamera_WDS_wfsRaft::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      sscanf(textValue,"%ld",&data.status);
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_WDS_wfsRaft::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      sprintf(textValue,"%ld",data.status);
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

	svcRTN salcamera_WDS_wfsRaft::getItem ( svcIID itemId , svcFLOAT &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_WDS_wfsRaft_metrics :
                      if { size > 33 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.metrics[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_WDS_wfsRaft_parameters :
                      if { size > 33 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.parameters[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_WDS_wfsRaft_zernikes :
                      if { size > 17 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.zernikes[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salcamera_WDS_wfsRaft::setItem ( svcIID itemId , svcFLOAT &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_WDS_wfsRaft_metrics :
                      if { size > 33 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.metrics[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_WDS_wfsRaft_parameters :
                      if { size > 33 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.parameters[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_camera_WDS_wfsRaft_zernikes :
                      if { size > 17 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.zernikes[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_WDS_wfsRaft::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      sscanf(textValue,"%ld",&data.status);
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_WDS_wfsRaft::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

                 case SAL_IID_camera_WDS_wfsRaft_status :
                      sprintf(textValue,"%ld",data.status);
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}
