
	svcRTN salcamera_SDS_status::getItem ( svcIID itemId , svcULONG &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_SDS_status_flags :
                      if { size > 21 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.flags[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salcamera_SDS_status::setItem ( svcIID itemId , svcULONG &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_SDS_status_flags :
                      if { size > 21 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.flags[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_SDS_status::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salcamera_SDS_status::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

	svcRTN salcamera_SDS_status::getItem ( svcIID itemId , svcFLOAT &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_SDS_status_current :
                      if { size > 81 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.current[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salcamera_SDS_status::setItem ( svcIID itemId , svcFLOAT &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_camera_SDS_status_current :
                      if { size > 81 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.current[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salcamera_SDS_status::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salcamera_SDS_status::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}
