
	svcRTN salm1m3_LimitSensors::getItem ( svcIID itemId , svcSHORT &value, svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_m1m3_LimitSensors_liftoff :
                      if { size > 65 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.liftoff[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_m1m3_LimitSensors_limit :
                      if { size > 65 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        value[count] = data.limit[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

 	svcRTN salm1m3_LimitSensors::setItem ( svcIID itemId , svcSHORT &value , svcUINT size)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    switch (itemId) {

                 case SAL_IID_m1m3_LimitSensors_liftoff :
                      if { size > 65 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.liftoff[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

                 case SAL_IID_m1m3_LimitSensors_limit :
                      if { size > 65 } {return SAL__INDEX_OUT_OF_RANGE;}
                      for (unsigned int count=0; count<size; count++) {
                        data.limit[count] = value[count];
                      }
                      result = SAL__OK;
                      break;

	    }
	    return result;
	}

       svcRTN salm1m3_LimitSensors::setItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}

       svcRTN salm1m3_LimitSensors::getItemStr ( svcIID itemId , svcCHAR *textValue)
	{
	    svcRTN result = SAL__NOT_DEFINED;
	    
	    switch (itemid) {

	    }
	    return result;
	}
