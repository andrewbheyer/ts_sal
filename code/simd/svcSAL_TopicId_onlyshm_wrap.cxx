/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

     
#include "svcSAL_TopicId_onlyshm.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_new_1salTopicId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::string *argp1 ;
  salTopicId *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(std::string **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::string");
    return 0;
  }
  arg1 = *argp1; 
  result = (salTopicId *)new salTopicId(arg1);
  *(salTopicId **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_swigTopicIdJNI_delete_1salTopicId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  salTopicId *arg1 = (salTopicId *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(salTopicId **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1salTelemetry(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->salTelemetry();
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1salConnect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcTID arg2 ;
  std::string arg3 ;
  svcTID *argp2 ;
  std::string *argp3 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcTID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcTID");
    return 0;
  }
  arg2 = *argp2; 
  argp3 = *(std::string **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::string");
    return 0;
  }
  arg3 = *argp3; 
  result = (arg1)->salConnect(arg2,arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1reSynchronize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->reSynchronize();
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1publisher(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->publisher();
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1subscriber(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->subscriber();
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getSample(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcINT arg2 ;
  svcINT *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcINT **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg2 = *argp2; 
  result = (arg1)->getSample(arg2);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1putSample(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->putSample();
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1shmInfo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->shmInfo();
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getCurrentTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcTIME result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->getCurrentTime();
  *(svcTIME **)&jresult = new svcTIME((const svcTIME &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setDebug(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcUINT arg2 ;
  svcUINT *argp2 ;
  svcINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcUINT **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcUINT");
    return 0;
  }
  arg2 = *argp2; 
  result = (arg1)->setDebug(arg2);
  *(svcINT **)&jresult = new svcINT((const svcINT &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getDebug(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (arg1)->getDebug();
  *(svcINT **)&jresult = new svcINT((const svcINT &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcSHORT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcSHORT & reference is null");
    return 0;
  } 
  result = (arg1)->getItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUSHORT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUSHORT & reference is null");
    return 0;
  } 
  result = (arg1)->getItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcINT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcINT & reference is null");
    return 0;
  } 
  result = (arg1)->getItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUINT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUINT & reference is null");
    return 0;
  } 
  result = (arg1)->getItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcFLT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcFLT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcFLT & reference is null");
    return 0;
  } 
  result = (arg1)->getItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcDBL *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcDBL **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcDBL & reference is null");
    return 0;
  } 
  result = (arg1)->getItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcSHORT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcSHORT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->getItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUSHORT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUSHORT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->getItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcINT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcINT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->getItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUINT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUINT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->getItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcFLT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcFLT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcFLT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->getItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItem_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcDBL *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcDBL **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcDBL & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->getItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getItemStr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcCHAR *arg3 = (svcCHAR *) 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcCHAR **)&jarg3; 
  result = (arg1)->getItemStr(arg2,arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcSHORT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcSHORT & reference is null");
    return 0;
  } 
  result = (arg1)->setItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUSHORT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUSHORT & reference is null");
    return 0;
  } 
  result = (arg1)->setItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcINT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcINT & reference is null");
    return 0;
  } 
  result = (arg1)->setItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUINT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUINT & reference is null");
    return 0;
  } 
  result = (arg1)->setItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcFLT *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcFLT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcFLT & reference is null");
    return 0;
  } 
  result = (arg1)->setItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcDBL *arg3 = 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcDBL **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcDBL & reference is null");
    return 0;
  } 
  result = (arg1)->setItem(arg2,*arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcSHORT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcSHORT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->setItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUSHORT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUSHORT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUSHORT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->setItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcINT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcINT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->setItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcUINT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcUINT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcUINT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->setItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcFLT *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcFLT **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcFLT & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->setItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItem_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcDBL *arg3 = 0 ;
  svcINT arg4 ;
  svcIID *argp2 ;
  svcINT *argp4 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcDBL **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "svcDBL & reference is null");
    return 0;
  } 
  argp4 = *(svcINT **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcINT");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->setItem(arg2,*arg3,arg4);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setItemStr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcIID arg2 ;
  svcCHAR *arg3 = (svcCHAR *) 0 ;
  svcIID *argp2 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  argp2 = *(svcIID **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null svcIID");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(svcCHAR **)&jarg3; 
  result = (arg1)->setItemStr(arg2,arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1getProperty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcCHAR *arg2 = (svcCHAR *) 0 ;
  svcCHAR *arg3 = (svcCHAR *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  arg2 = *(svcCHAR **)&jarg2; 
  arg3 = *(svcCHAR **)&jarg3; 
  result = (arg1)->getProperty(arg2,arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1setProperty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  svcCHAR *arg2 = (svcCHAR *) 0 ;
  svcCHAR *arg3 = (svcCHAR *) 0 ;
  svcRTN result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  arg2 = *(svcCHAR **)&jarg2; 
  arg3 = *(svcCHAR **)&jarg3; 
  result = (arg1)->setProperty(arg2,arg3);
  *(svcRTN **)&jresult = new svcRTN((const svcRTN &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_swigTopicIdJNI_salTopicId_1m_1TopicId_1shmid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  salTopicId *arg1 = (salTopicId *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->m_TopicId_shmid = arg2;
}


SWIGEXPORT jint JNICALL Java_swigTopicIdJNI_salTopicId_1m_1TopicId_1shmid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  salTopicId *arg1 = (salTopicId *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(salTopicId **)&jarg1; 
  result = (int) ((arg1)->m_TopicId_shmid);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_swigTopicIdJNI_salTopicId_1m_1shmMapper_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  shmMapper arg1 ;
  shmMapper *argp1 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(shmMapper **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null shmMapper");
    return ;
  }
  arg1 = *argp1; 
  salTopicId::m_shmMapper = arg1;
}


SWIGEXPORT jlong JNICALL Java_swigTopicIdJNI_salTopicId_1m_1shmMapper_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  shmMapper result;
  
  (void)jenv;
  (void)jcls;
  result = salTopicId::m_shmMapper;
  *(shmMapper **)&jresult = new shmMapper((const shmMapper &)result); 
  return jresult;
}


#ifdef __cplusplus
}
#endif

