module scheduler
{
	struct scheduler_econstraints {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  string<32>	type;
	  string<32>	minval;
	  string<32>	maxval;
	};
	#pragma keylist scheduler_econstraints
	struct scheduler_iconstraints {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  string<32>	type;
	  string<32>	minval;
	  string<32>	maxval;
	};
	#pragma keylist scheduler_iconstraints
	struct scheduler_parameters {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  string<32>	algorithm;
	  string<32>	p1;
	  string<32>	p2;
	  string<32>	p3;
	  string<32>	p4;
	};
	#pragma keylist scheduler_parameters
	struct scheduler_program {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  long	id;
	  long	priority;
	  long	status;
	  float	completion;
	};
	#pragma keylist scheduler_program
	struct scheduler_progress {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  long	taskid[32];
	  long	priority[32];
	  double	completion[32];
	  long	projection[32];
	};
	#pragma keylist scheduler_progress
	struct scheduler_targets {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  double	ra[10];
	  double	dec[10];
	  double	catid[10];
	  double	airmass[10];
	  double	rotangle[10];
	  long	filter[10];
	  long	numexp[10];
	};
	#pragma keylist scheduler_targets
	struct Application {
	  string<32> private_revCode;  //private
	  double     private_sndStamp; //private
	  double     private_rcvStamp; //private
	  long       private_seqNum;   //private
	  long       private_origin;   //private
	  string<50>	Status;
	  float	data[200];
	};
	#pragma keylist Application
};
