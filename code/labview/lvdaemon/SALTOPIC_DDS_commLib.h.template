/* commLib.h 	08/30/1999	NOAO */

/* 
 *  Developed 1998 by the National Optical Astronomy Observatories(*)
 *
 * (*) Operated by the Association of Universities for Research in
 *    Astronomy, Inc. (AURA) under cooperative agreement with the
 *    National Science Foundation.
 */

/*
 *  modification history
 *  --------------------
 *  01b 30aug99, rcr - Created.
 *  03a 11feb04, gsh - Multi threaded code added
 *  05a 28may07, gsh - DDS support. Renamed D_commLib.h
 *  05b 05may09, gsh - Named DDS
 */

/*------------------------------------------------------------------
 * D_commLib.h
 *
 *-----------------------------------------------------------------*/

#ifndef __SALTOPIC_COMMLIB_H
#define __SALTOPIC_COMMLIB_H

#include <semaphore.h>
#include <pthread.h>
#include "extcode.h"

#define MAX_MSG_LENGTH  2000
#define	MQ_MAX		8192

/*
	types
*/

#define PUBLISH		1
#define SUBSCRIBE	2
#define LARGE		3
#define END_LARGE	4
#define PUB_INIT	5
#define SUB_INIT	6
#define PUB_NEW         7
#define SUB_NEW         8
#define BEG_LARGE	9
#define UNSUB		10
#define COMMAND		11
#define COMMAND_NEW	12
#define QUIT            100

#include <sys/time.h>
#include "SALTOPIC_cache.h"

typedef struct {
	LVBoolean	status;
	int32		code;
	LStrHandle	source;
} TD1;



typedef struct {
	mqd_t		msgid_pub;
	mqd_t		msgid_sub;
	int		timeout_read;
	int		timeout_write;
	Occurrence	occ_read;
	Occurrence	occ_write;
	sem_t		sem_read;
	sem_t		sem_write;
	pthread_t	thread_read;
	pthread_t	thread_write;
	SALTOPIC	D_read;
	SALTOPIC	D_write;
	TD1		er;
	TD1		ew;
} SALTOPIC_serial_st;

extern int comm_open_port_SALTOPIC(int np, char *namepub, char *namesub);
extern int comm_send_msg_SALTOPIC(mqd_t fdttys, SALTOPIC *outBuf);
extern int comm_get_msg_SALTOPIC(mqd_t fdttys, SALTOPIC *inBuf);
extern int LVcomm_open_dds_SALTOPIC(int fd, LStrHandle buf_pub, LStrHandle buf_sub);

extern int LVcomm_init(void *occArray);
extern int LVcomm_get_ithr(int fd);
extern int LVcomm_get_ethr(int fd, int *key, int *type, int *length, int *ps, int *pus,
		int *ss, int *sus, LStrHandle buf);
extern int LVcomm_send_ithr(int fd, int key, int type, int length, LStrHandle buf);
extern int LVcomm_send_ethr(int fd);
extern int LVcomm_close_thr(int fd);
extern MgErr Occur(Occurrence o);

#endif
