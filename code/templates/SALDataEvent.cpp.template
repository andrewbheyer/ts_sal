
/*
 * This file contains the implementation for the 'SALData_Event' executable.
 *
 ***/

#include <string>
#include <sstream>
#include <iostream>
#include "SAL_SALData.h"
#include "ccpp_sal_SALData.h"
#include "os.h"

#include "example_main.h"

using namespace DDS;
using namespace SALData;

/* entry point exported and demangled so symbol can be found in shared library */
extern "C"
{
  OS_API_EXPORT
  int SALData_Event(char *alias , char *message);
}

int SALData_Event(char *alias, char *message)
{
  
  int priority = SAL__EVENT_INFO;

#ifdef SAL_SUBSYSTEM_ID_IS_KEYED
  int SALDataID = 1;
  SAL_SALData mgr = SAL_SALData(SALDataID);
#else
  SAL_SALData mgr = SAL_SALData();
#endif

  // generate event
  mgr.logEvent(message, priority);
  cout << "=== Event " << alias << " generated = " << message << endl;

  /* Remove the DataWriters etc */
  mgr.salShutdown();

  return 0;
}


int OSPL_MAIN (int argc, char *argv[])
{
  if (argc < 3) {
     cout << "A alias + message text is required at a minimum" << endl;
     exit(1);
  }
  return SALData_Event (argv[1], argv[2]);
}


