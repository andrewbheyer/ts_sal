#
# Include paths
INCLUDES=-I./
INCLUDES+=-I./bld
INCLUDES+=-I$(OSPL_HOME)/include/dcps/C/SAC
INCLUDES+=-I$(OSPL_HOME)/include
INCLUDES+=-I$(OSPL_HOME)/include/sys

# C++ Compiler settings.
CC=gcc
CCFLAGS=-g -c
CPPFLAGS=$(INCLUDES)

# Linker settings.
LD=$(CC)
LD_FLAGS=
LD_LIBS= -L/opt/lsstsal/lib -lshmSAL_linux.so

OSPLICE_LIBS=-lddsdatabase -ldcpssac

#Salgenerator adds DPCS_SRC_FILES.... and SAL_SRC_FILES
SAL_SRC_FILES = 
DCPS_OBJ_FILES = $(patsubst %.c, %.o, $(DCPS_SRC_FILES))
SAL_OBJ_FILES = $(patsubst %.c, %.o, $(SAL_SRC_FILES))

.c.o :
	@echo "Compiling $<"
	@$(CC) $(CPPFLAGS) $(CCFLAGS) $< -o $@

all : EXEC
	@echo ">>>> all done"
	@echo ">>>> to execute, enter : sh RUN"
	@echo ">>>> to clean, enter : make clean"


EXEC  : gets replaced by salgenerator lib* and tests

#tests : gets replaced by salgenerator
# libTopicIdBase.so : $(DCPS_OBJ_FILES) 
#	@$(CC) $(DCPS_OBJ_FILES)  $(SAL_OBJ_FILES) $(LD_FLAGS) -L$(OSPL_HOME)/lib -o $@ $^ $(OSPLICE_LIBS) $(LD_LIBS)
# and foreach of subscriber/publisher/shmem_subscriber/shmem_publisher_shmem_tester
# TopicId_publisher : $(DCPS_OBJ_FILES) $(SAL_OBJ_FILES) TopicId_publisher.o
#	@$(CC) $(DCPS_OBJ_FILES) TopicId_publisher.o ./libTopicIdBase.so $(LD_FLAGS) -L$(OSPL_HOME)/lib -o $@ $^ $(OSPLICE_LIBS) $(LD_LIBS)

clean :
	@rm -f *.o
	@rm -f bld/*
	@rm -f exec/*
	@rmdir bld
	@rmdir exec
