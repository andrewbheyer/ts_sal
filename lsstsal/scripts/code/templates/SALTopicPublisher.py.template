#!/usr/bin/python

# This software is copyrighted by Tech-X Corporation, 2012.  All
# rights reserved.

# Script for SALTopic example.  
import os
import sys
import logging
import time

sys.path.append("../../")
from ddswrapper import *

# use the lowest logging level since we are developing
logging.basicConfig(level = logging.INFO)
logging.info("Get an instance of the TxPyDDS::Runtime...")

# Idl File and Topic name being used
idlFilePath = os.getcwd() + "/SALTopicData.idl"
topicName = "Msg"

# Set up PyDDS environment
pydds = PyDDS.PyDDS()
ddsLogger = logging.getLogger("PyDDS")
pydds.setLogger(ddsLogger)

try:
    logging.info("Create a new DomainParticipant...")
    dp = pydds.create_participant("")
except PyDDSWrapper.InvalidHandle as ex:
    logging.error("Caught TxPyDDS::InvalidHandle exception"
                  " when creating domain participant\n" 
                  "Is the OSPL daemon running?\n" 
                  "From:" + ex.what())
    exit(-1)
else:
    logging.info("Domain Participant created in domain:"+dp.get_domain_id())

try:
    logging.info("Creating SALTopic TypeSupport...")
    SALTopicTS = pydds.create_type_support (idlFilePath + "#" + topicName)
    
    topicTypeName = "SALTopicTopic" #SALTopicTS.get_type_name()
    pydds.checkStatus(
        SALTopicTS.register_type(dp, topicTypeName),
        "Registering SALTopic type to domain participant"
        )

    # Creating a topicQos structure
    SALTopicQos = pydds.TopicQos()
    pydds.checkStatus(
        dp.get_default_topic_qos(SALTopicQos),
        "Retrieving default topicQos from domain participant"
        )

    SALTopicQos.set_reliable()
    SALTopicQos.set_transient()

    pydds.checkStatus(
        dp.set_default_topic_qos(SALTopicQos),
        "Setting default topicQos in domain participant"
        )

    SALTopic = dp.create_topic ("SALTopicData_Msg", topicTypeName, SALTopicQos)

    publisherQos = pydds.PublisherQos()
    pydds.checkStatus(
        dp.get_default_publisher_qos(publisherQos),
        "Retrieving default publisher QoS"
        )

    publisherQos.set_partition("SALTopic example")

    publisher = dp.create_publisher (publisherQos)

    writerQos = pydds.DataWriterQos()
    pydds.checkStatus(
        publisher.get_default_datawriter_qos(writerQos),
        "Retrieving default DataWriter QoS"
        )
    pydds.checkStatus(
        publisher.copy_from_topic_qos(writerQos, SALTopicQos),
        "Copying DataWriter QoS from SALTopic topic QoS"
        )
    # Set autodispose unregistered instance here

    logging.info("Creating datawriter!")
    SALwriter = publisher.create_datawriter(SALTopic, writerQos)

    # Now we write data here
    counter = 1
    msg=["From Python with Love!", 
         "Hello World, Python DDS!", 
         "The name is Bond, James Bond.",
         "That's it for now!"]

    for m in msg:
        print "Writing msg: ", counter, m
        SALInstance = SALTopicTS.getTopicObject()
        SALInstance.private_revCode = "LSST SAL TEST"
        status = SALwriter.write(SALInstance)
        pydds.checkStatus(status, "Writing a SALTopic sample")
        counter += 1

    time.sleep(1)

except PyDDSWrapper.Exception as ex:
    logging.warning("Caught TxPyDDS::Exception: " +
                    ex.error_name() + " when " +
                    ex.what())
except PyDDSWrapper.InvalidHandle,  ex:
    logging.warning("Caught TxPyDDS::InvalidHandle exception" +
    "From:" + ex.what())
except PyDDSWrapper.NotImplemented, ex:
    logging.warning("Caught TxPyDDS::NotImplemented exception" +
    "From:" + ex.what())
except TypeError, ex:
    logging.warning("Unexpected exception TypeError: %s" % str(ex))
except:
    logging.warning("Unexpected exception: %s" % str(sys.exc_info()[0]))
    raise
else:
    logging.info("End pydds example publisher...")

