#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
JAVAC         = javac
JAR           = jar
JAVACFLAGS    = $(GENFLAGS) -sourcepath ../src
CLASSEXT      = .class
CLASSDIR      = ../src/
OUTPUT_OPTION = -d $(CLASSDIR)
COMPILE.java  = $(JAVAC) $(JAVACFLAGS) -cp $(JAVACCPATH) 
JAVACCPATH    = "$(SAL_HOME)/lib/saj_mount_types.jar:$(CLASSDIR):$(OSPL_HOME)/jar/dcpssaj.jar:$(SAL_HOME)/lib/statemap.jar"
MAKEFILE      = Makefile.saj_mount_sm
DEPENDENCIES  = .depend.$(MAKEFILE)
LTARGETDIR    = ./
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
GENFLAGS      =  
CLASSES       =  $(CLASSDIR)/org/lsst/sal/SAL_mount$(CLASSEXT) $(CLASSDIR)ErrorHandler$(CLASSEXT) $(CLASSDIR)salLifecycle$(CLASSEXT) $(CLASSDIR)salLifecycleContext$(CLASSEXT)
JARCLASSES    =  org/lsst/sal/SAL_mount$(CLASSEXT) salLifecycleContext*$(CLASSEXT) salLifecycle$(CLASSEXT) 
JAREXT        = .jar
MAINCLASS     = lifecycle
JARFILE       = $(LTARGETDIR)$(LIBPREFIX)saj_mount_sm$(LIBSUFFIX)$(JAREXT)
MANIFEST      = saj_mount_sm.manifest
JARFLAGS      = cvfm
SRC           = ../src/salLifecyclejava ../src/salLifecycleContext.java 

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(JARFILE)

$(JARFILE): $(CLASSES) $(CLASSDIR)$(MANIFEST)
	@$(TESTDIRSTART) "$(LTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(LTARGETDIR)"
	cd $(CLASSDIR) && $(JAR) $(JARFLAGS) $(JARFILE) $(MANIFEST) $(JARCLASSES) 


#	$(MV) $(CLASSDIR)/$(JARFILE) .

$(CLASSDIR)$(MANIFEST):
	echo Class-Path: saj_mount_types.jar $(OSPL_HOME)/jar/dcpssaj.jar $(SAL_HOME)/lib/statemap.jar > $(CLASSDIR)$(MANIFEST)
	echo Main-Class: $(MAINCLASS) >> $(CLASSDIR)$(MANIFEST)

generated: $(GENERATED_DIRTY)
	@-:

$(CLASSDIR)/org/lsst/sal/SAL_mount$(CLASSEXT): ../src/org/lsst/sal/SAL_mount.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ../src/org/lsst/sal/SAL_mount.java



$(CLASSDIR)/salLifecycle$(CLASSEXT): ../src/salLifecycle.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ../src/salLifecycle.java

$(CLASSDIR)/salLifecycleContext$(CLASSEXT): ../src/salLifecycleContext.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ../src/salLifecycleContext.java

clean:
	-$(RM) $(CLASSES)

realclean: clean
	-$(RM) $(BIN)
	-$(RM) $(CLASSDIR)$(MANIFEST)

check-syntax:
	$(COMPILE.java) $(EXPORTFLAGS) $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@$(TOUCH) $(DEPENDENCIES)

depend:
	-$(MPC_ROOT)/depgen.pl  $(JAVACFLAGS) $(JAVAJAVACFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

include $(DEPENDENCIES)
