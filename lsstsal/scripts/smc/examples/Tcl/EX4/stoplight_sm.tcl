# ex: set ro:
# DO NOT EDIT.
# generated by smc (http://smc.sourceforge.net/)
# from file : stoplight.sm


namespace eval tcl_ex4 {

    class stoplightContext {
        inherit ::statemap::FSMContext;

    # Member functions.

        constructor {owner} {
            ::statemap::FSMContext::constructor ${::tcl_ex4::StopMap::Stopped};
        } {
            set _owner $owner;
        }

        public method Continue {} {
            [getState] Continue $this;
            return -code ok;
        }

        public method Pause {} {
            [getState] Pause $this;
            return -code ok;
        }

        public method Start {} {
            [getState] Start $this;
            return -code ok;
        }

        public method Stop {} {
            [getState] Stop $this;
            return -code ok;
        }

        public method Timeout {} {
            [getState] Timeout $this;
            return -code ok;
        }

        public method getOwner {} {
            return -code ok $_owner;
        }

    # Member data.

        private variable _owner;
    }

    class StoplightState {
        inherit ::statemap::State;

    # Member functions.

        constructor {name id} {
            ::statemap::State::constructor $name $id;
        } {}

        public method Entry {context} {};
        public method Exit {context} {};

        public method Continue {context} {
            Default $context;
            return -code ok;
        }

        public method Pause {context} {
            Default $context;
            return -code ok;
        }

        public method Start {context} {
            Default $context;
            return -code ok;
        }

        public method Stop {context} {
            Default $context;
            return -code ok;
        }

        public method Timeout {context} {
            Default $context;
            return -code ok;
        }

        public method Default {context} {
            set transition [$context getTransition];
            return -code error "Transition \"$transition\" fell through to a non-existent default definition.";
        }
    }

    class StopMap {
    # Member data.

        public common Stopped "";
        public common EastWestGreen "";
        public common EastWestYellow "";
        public common NorthSouthGreen "";
        public common NorthSouthYellow "";
    }

    class StopMap_Default {
        inherit StoplightState;

    # Member functions.

        constructor {name id} {
           StoplightState::constructor $name $id;
        } {}

        public method Start {context} {
            set _transition "Start";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Default";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Default Start()";
            }


            return -code ok;
        }

        public method Continue {context} {
            set _transition "Continue";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Default";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Default Continue()";
            }


            return -code ok;
        }

        public method Pause {context} {
            set _transition "Pause";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Default";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Default Pause()";
            }

            $context pushState ${::tcl_ex4::PauseMap::Paused};
            [$context getState] Entry $context;

            return -code ok;
        }

        public method Stop {context} {
            set ctxt [$context getOwner];
            set _transition "Stop";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Default";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Default Stop()";
            }

            $context clearState;
            if [catch {
                $ctxt StopTimer ;
                $ctxt ResetLights ;
                if {[$context getDebugFlag] != 0} {
                    puts [$context getDebugStream] "EXIT TRANSITION : StopMap::Default Stop()";
                }

            } result] {
                $context setState ${::tcl_ex4::StopMap::Stopped};
                error $result;
            } else {
                $context setState ${::tcl_ex4::StopMap::Stopped};
            }
            [$context getState] Entry $context;

            return -code ok;
        }
    }

    class StopMap_Stopped {
        inherit StopMap_Default;

        constructor {name id} {
            StopMap_Default::constructor $name $id;
        } {}

        public method Continue {context} {

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Stopped";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Stopped Continue()";
            }


            return -code ok;
        }

        public method Pause {context} {

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Stopped";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Stopped Pause()";
            }


            return -code ok;
        }

        public method Start {context} {
            set ctxt [$context getOwner];

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Stopped";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Stopped Start()";
            }

            $context clearState;
            if [catch {
                $ctxt TurnLight NSLIGHT RED;
                $ctxt TurnLight EWLIGHT GREEN;
                $ctxt SetTimer EWGreenTimer;
                if {[$context getDebugFlag] != 0} {
                    puts [$context getDebugStream] "EXIT TRANSITION : StopMap::Stopped Start()";
                }

            } result] {
                $context setState ${::tcl_ex4::StopMap::EastWestGreen};
                error $result;
            } else {
                $context setState ${::tcl_ex4::StopMap::EastWestGreen};
            }
            [$context getState] Entry $context;

            return -code ok;
        }

        public method Stop {context} {

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::Stopped";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::Stopped Stop()";
            }


            return -code ok;
        }
    }

    class StopMap_EastWestGreen {
        inherit StopMap_Default;

        constructor {name id} {
            StopMap_Default::constructor $name $id;
        } {}

        public method Timeout {context} {
            set ctxt [$context getOwner];

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::EastWestGreen";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::EastWestGreen Timeout()";
            }

            $context clearState;
            if [catch {
                $ctxt TurnLight EWLIGHT YELLOW;
                $ctxt SetTimer YellowTimer;
                if {[$context getDebugFlag] != 0} {
                    puts [$context getDebugStream] "EXIT TRANSITION : StopMap::EastWestGreen Timeout()";
                }

            } result] {
                $context setState ${::tcl_ex4::StopMap::EastWestYellow};
                error $result;
            } else {
                $context setState ${::tcl_ex4::StopMap::EastWestYellow};
            }
            [$context getState] Entry $context;

            return -code ok;
        }
    }

    class StopMap_EastWestYellow {
        inherit StopMap_Default;

        constructor {name id} {
            StopMap_Default::constructor $name $id;
        } {}

        public method Timeout {context} {
            set ctxt [$context getOwner];

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::EastWestYellow";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::EastWestYellow Timeout()";
            }

            $context clearState;
            if [catch {
                $ctxt TurnLight EWLIGHT RED;
                $ctxt TurnLight NSLIGHT GREEN;
                $ctxt InformVehicles north;
                $ctxt InformVehicles south;
                $ctxt SetTimer NSGreenTimer;
                if {[$context getDebugFlag] != 0} {
                    puts [$context getDebugStream] "EXIT TRANSITION : StopMap::EastWestYellow Timeout()";
                }

            } result] {
                $context setState ${::tcl_ex4::StopMap::NorthSouthGreen};
                error $result;
            } else {
                $context setState ${::tcl_ex4::StopMap::NorthSouthGreen};
            }
            [$context getState] Entry $context;

            return -code ok;
        }
    }

    class StopMap_NorthSouthGreen {
        inherit StopMap_Default;

        constructor {name id} {
            StopMap_Default::constructor $name $id;
        } {}

        public method Timeout {context} {
            set ctxt [$context getOwner];

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::NorthSouthGreen";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::NorthSouthGreen Timeout()";
            }

            $context clearState;
            if [catch {
                $ctxt TurnLight NSLIGHT YELLOW;
                $ctxt SetTimer YellowTimer;
                if {[$context getDebugFlag] != 0} {
                    puts [$context getDebugStream] "EXIT TRANSITION : StopMap::NorthSouthGreen Timeout()";
                }

            } result] {
                $context setState ${::tcl_ex4::StopMap::NorthSouthYellow};
                error $result;
            } else {
                $context setState ${::tcl_ex4::StopMap::NorthSouthYellow};
            }
            [$context getState] Entry $context;

            return -code ok;
        }
    }

    class StopMap_NorthSouthYellow {
        inherit StopMap_Default;

        constructor {name id} {
            StopMap_Default::constructor $name $id;
        } {}

        public method Timeout {context} {
            set ctxt [$context getOwner];

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : StopMap::NorthSouthYellow";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: StopMap::NorthSouthYellow Timeout()";
            }

            $context clearState;
            if [catch {
                $ctxt TurnLight NSLIGHT RED;
                $ctxt TurnLight EWLIGHT GREEN;
                $ctxt InformVehicles east;
                $ctxt InformVehicles west;
                $ctxt SetTimer EWGreenTimer;
                if {[$context getDebugFlag] != 0} {
                    puts [$context getDebugStream] "EXIT TRANSITION : StopMap::NorthSouthYellow Timeout()";
                }

            } result] {
                $context setState ${::tcl_ex4::StopMap::EastWestGreen};
                error $result;
            } else {
                $context setState ${::tcl_ex4::StopMap::EastWestGreen};
            }
            [$context getState] Entry $context;

            return -code ok;
        }
    }


    class PauseMap {
    # Member data.

        public common Paused "";
        public common PauseTimeout "";
    }

    class PauseMap_Default {
        inherit StoplightState;

    # Member functions.

        constructor {name id} {
           StoplightState::constructor $name $id;
        } {}

        public method Start {context} {
            set _transition "Start";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : PauseMap::Default";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: PauseMap::Default Start()";
            }


            return -code ok;
        }

        public method Pause {context} {
            set _transition "Pause";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : PauseMap::Default";
            }

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: PauseMap::Default Pause()";
            }


            return -code ok;
        }

        public method Stop {context} {
            set _transition "Stop";
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : PauseMap::Default";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: PauseMap::Default Stop()";
            }

            $context popState;

            $context Stop;

            return -code ok;
        }
    }

    class PauseMap_Paused {
        inherit PauseMap_Default;

        constructor {name id} {
            PauseMap_Default::constructor $name $id;
        } {}

        public method Continue {context} {

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : PauseMap::Paused";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: PauseMap::Paused Continue()";
            }

            $context popState;

            $context Continue;

            return -code ok;
        }

        public method Timeout {context} {

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : PauseMap::Paused";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: PauseMap::Paused Timeout()";
            }

            $context setState ${::tcl_ex4::PauseMap::PauseTimeout};
            [$context getState] Entry $context;

            return -code ok;
        }
    }

    class PauseMap_PauseTimeout {
        inherit PauseMap_Default;

        constructor {name id} {
            PauseMap_Default::constructor $name $id;
        } {}

        public method Continue {context} {

            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "LEAVING STATE   : PauseMap::PauseTimeout";
            }

            [$context getState] Exit $context;
            if {[$context getDebugFlag] != 0} {
                puts [$context getDebugStream] "ENTER TRANSITION: PauseMap::PauseTimeout Continue()";
            }

            $context popState;

            $context Timeout;

            return -code ok;
        }
    }


    # Static state declarations.
    set StopMap::Stopped tcl_ex4::[StopMap_Stopped #auto "StopMap::Stopped" 0];
    set StopMap::EastWestGreen tcl_ex4::[StopMap_EastWestGreen #auto "StopMap::EastWestGreen" 1];
    set StopMap::EastWestYellow tcl_ex4::[StopMap_EastWestYellow #auto "StopMap::EastWestYellow" 2];
    set StopMap::NorthSouthGreen tcl_ex4::[StopMap_NorthSouthGreen #auto "StopMap::NorthSouthGreen" 3];
    set StopMap::NorthSouthYellow tcl_ex4::[StopMap_NorthSouthYellow #auto "StopMap::NorthSouthYellow" 4];
    set PauseMap::Paused tcl_ex4::[PauseMap_Paused #auto "PauseMap::Paused" 5];
    set PauseMap::PauseTimeout tcl_ex4::[PauseMap_PauseTimeout #auto "PauseMap::PauseTimeout" 6];
}

# Local variables:
#  buffer-read-only: t
# End:
